var tipuesearch = {"pages": [{
    "title": "Welcome to Jekyll!",
    "text": "You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated. Jekyll requires blog post files to be named according to the following format: YEAR-MONTH-DAY-title.MARKUP Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and MARKUP is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works. Jekyll also offers powerful support for code snippets: {% highlight ruby %} def print_hi(name) puts \"Hi, #{name}\" end print_hi('Tom') #&#8658; prints 'Hi, Tom' to STDOUT. {% endhighlight %} Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk]. [jekyll-docs]: https://jekyllrb.com/docs/home [jekyll-gh]: https://github.com/jekyll/jekyll [jekyll-talk]: https://talk.jekyllrb.com/",
    "tags": "jekyll update",
    "url": "/welcome-to-jekyll/"
  },{
    "title": "",
    "text": "404 Page not found :( The requested page could not be found.",
    "tags": "",
    "url": "/404.html"
  },{
    "title": "",
    "text": "ProjectForge's Github Page site is created by Github actions. == Use and test ProjectForge's web site on your local machine === Prepare your local gem installation ---- sudo gem install bundler jekyll sudo gem update sudo gem install jekyll-feed sudo gem install jekyll-paginate sudo gem install jekyll-seo-tag sudo gem install jekyll-gist sudo gem install jekyll-avatar sudo gem install jekyll-asciidoc sudo gem install jekyll-numbered-headings ---- === Run ProjectForge's site on your local machine ---- cd site bundle exec jekyll serve ----",
    "tags": "",
    "url": "/README/"
  },{
    "title": "About",
    "text": ":hide-uri-scheme: ProjectForge® is a registered trademark. + Copyright 2001-2024© Kai Reinhard. + All rights reserved. Kai Reinhard + Micromata GmbH + Marie-Calm-Str. 1-5 + 34131 Kassel + Germany + k.reinhard at micromata.com + https://www.projectforge.org Copyright 2001-2022© Kai Reinhard.All rights reserved. ProjectForge® is a registered trademark of Kai Reinhard. The contents published on the website are subject to copy right.All photographs are subjected to the right of use.The reproduction or redistribution of part or all texts or photographs is not allowed without written permission from the copyright holder. Concept, design, structure and programming of the website are subjected to copy right law and as such may not be reprinted, reproduced or utilized in parts or in its entire form in any way without written permission from the copyright holder. It is not permitted to alter or distribute the contents of this website.Nor is it allowed to copy or to duplicate any of these for commercial purposes. Kai Reinhard cannot be held responsible for the contents of external websites to which links have been established. == Team [cols=3*,options=header] |=== |Team |Organization |Role | Kai Reinhard | Micromata GmbH | architect, developer | Fin Reinhard | Micromata GmbH | developer | Wolfgang Jung | Micromata GmbH | architect, developer | Christian Claus | Micromata GmbH | developer | Daniel Ludwig | Micromata GmbH | developer | Roger Kommer | Micromata GmbH | developer | Christian Tausendfreund | Micromata GmbH | developer | Stefan Niemczyk | Micromata GmbH | developer | Jan Brümmer | Micromata GmbH | developer |===",
    "tags": "",
    "url": "/about/"
  },{
    "title": "Changelog",
    "text": "",
    "tags": "",
    "url": "/changelog-posts/"
  },{
    "title": "ProjectForge Changelog",
    "text": "Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. {% include changelog.html %}",
    "tags": "",
    "url": "/changelog-timeline/"
  },{
    "title": "Download",
    "text": ":sectnums: == Community Edition [.uk-text-lead] This community edition is full-featured and for free, there are no limitations! An auto-update mechanism for the data-base on start-up of the web app is included for all previous public versions: Convenientupdates. [cols=4*,options=header] |=== |Type | Link | Size | Description | Windows / MacOS X / Other |https://sourceforge.net/projects/pforge/files/ProjectForge/[ProjectForge-application-X.X.X.jar,window=_blank] |130MB |Executable java archive |Docker hub|https://hub.docker.com/r/micromata/projectforge[Docker images,window=_blank] |530MB |Docker images for running as single container as well as docker compose stack. |Sources |https://github.com/micromata/projectforge[Sources on Github,window=_blank] |- |All sources for own development. |=== === Source code at GitHub You can also check out the source code from https://github.com/micromata/projectforge[GitHub,window=_blank] === Convenient updates [.uk-text-lead] Updates through simple clicks ProjectForge provides a very convenient method for updating your ProjectForge installation. Since version 6 any required updates or migrations will be done automatically by simply starting a new version. Some versions need manual updates (e. g. of config files): https://projectforge.org/docs/migration/[Migration,window=_blank]. If you need to update versions older 6, you'll need to download the latest version 5 and use the older update mechanism by simply clicking through the updates. === Translation files [.uk-text-lead] ProjectForge is 100% internationalized. Enable new languages by simply editing the translation file. Currently ProjectForge is available in the languages English and German. For enabling a new language you only need to enter your translations in the translation text file. Please choose one of the existing language files which you will use as a template for your translations. Please leave the i18n key untouched and change the translation right to the '=' character. This is the format of a translation file: ---- # = address.addresses=Addresses address.addressStatus=Address status address.addressStatus.leaved=company leaved address.addressStatus.outdated=out-dated address.addressStatus.uptodate=up-to-date ... menu.accessList=Access management menu.addNewEntry=New entry menu.addressList=Addresses menu.administration=Administration ... task.assignedUser=Assigned user task.consumption=Consumption task.deleted=deleted ---- The translations are grouped, it's possible to translate only parts of the file. If any entry is missing in the user's language the translation from the default language is used (English). Use one of the following translation files as template: - https://github.com/micromata/projectforge/blob/master/projectforge-business/src/main/resources/I18nResources.properties[I18nResources.properties,window=_blank]: The English (default) translation file. - https://github.com/micromata/projectforge/blob/master/projectforge-business/src/main/resources/I18nResources_de.properties[I18nResources_de.properties,window=_blank]: The German translation file. Put the translation file to the path:`src/main/resources`. Please send any translation file to k.reinhard at me.com, so it'll be part of the next distribution. For any newer version of ProjectForge you'll get a list of new translations not yet available in your language (please refer the system administration menu). == Archive [cols=4*,options=header] |=== |Date|Link|Size|Platform |2016-08-16 |Version history on sourceforge: https://sourceforge.net/projects/pforge/files/ProjectForge/[ProjectForge on SourceForge,window=_blank] | | |2016-07-18 |https://sourceforge.net/projects/pforge/files/ProjectForge/6.1/ProjectForge-application-6.1.0.zip/[ProjectForge-application-6.1.0.zip,window=_blank] |-|all |2016-04-27 |http://downloads.sourceforge.net/project/pforge/ProjectForge/6.0/ProjectForge-6.0.zip/[ProjectForge-6.0.zip,window=_blank] |-|all |2014-05-16 |http://sourceforge.net/projects/pforge/files/ProjectForge/5.4/[ProjectForge-5.4.*,window=_blank] |-|all |2013-12-30 |http://sourceforge.net/projects/pforge/files/ProjectForge/5.3/[ProjectForge-5.3.*,window=_blank] |-|all |2013-07-07 |http://sourceforge.net/projects/pforge/files/ProjectForge/5.2/[ProjectForge-5.2.*,window=_blank] |-|all |2013-05-14 |http://sourceforge.net/projects/pforge/files/ProjectForge/5.1/[ProjectForge-5.1.*,window=_blank] |-|all |2013-04-10 |http://sourceforge.net/projects/pforge/files/ProjectForge/5.0/[ProjectForge-5.0.*,window=_blank] |-|all |2013-02-06 |http://sourceforge.net/projects/pforge/files/ProjectForge/4.3.1/[ProjectForge-4.3.1.*,window=_blank] |-|all |2013-01-26 |http://sourceforge.net/projects/pforge/files/ProjectForge/4.3/[ProjectForge-4.3.*,window=_blank] |-|all |2012-12-04 |http://sourceforge.net/projects/pforge/files/ProjectForge/4.2/[ProjectForge-4.2.*,window=_blank] |-|all |2012-06-16 |http://sourceforge.net/projects/pforge/files/ProjectForge/4.1.3/[ProjectForge-4.1.3.*,window=_blank] |-|all |2012-05-03 |http://sourceforge.net/projects/pforge/files/ProjectForge/4.1.0/[ProjectForge-4.1.0.*,window=_blank] |-|all |2012-04-18 |http://sourceforge.net/projects/pforge/files/ProjectForge/4.0.0/[ProjectForge-4.0.0.*,window=_blank] |-|all |2011-05-27 |http://sourceforge.net/projects/pforge/files/ProjectForge/3.6.1/[ProjectForge-3.6.1.*,window=_blank] |-|all |2011-03-18 |http://sourceforge.net/projects/pforge/files/ProjectForge/3.6.0/[ProjectForge-3.6.0.*,window=_blank] |-|all |2011-02-24 |http://sourceforge.net/projects/pforge/files/ProjectForge/3.5.4/[ProjectForge-3.5.4.*,window=_blank] |-|all |2011-02-14 |http://sourceforge.net/projects/pforge/files/ProjectForge/3.5.3/[ProjectForge-3.5.3.*,window=_blank] |-|all |2011-02-03 |http://sourceforge.net/projects/pforge/files/ProjectForge/3.5.2/[ProjectForge-3.5.2.*,window=_blank] |-|all |2011-01-26 |http://sourceforge.net/projects/pforge/files/ProjectForge/3.5.1/[ProjectForge-3.5.1.*,window=_blank] |-|all |2011-01-23 |http://sourceforge.net/projects/pforge/files/ProjectForge/3.5.0/[ProjectForge-3.5.0.*,window=_blank] |-|all |2010-11-17 |http://sourceforge.net/projects/pforge/files/ProjectForge/3.4.3[ProjectForge-3.4.3.*,window=_blank] |-|all |2010-11-08 |http://sourceforge.net/projects/pforge/files/ProjectForge/3.4.2[ProjectForge-3.4.2.*,window=_blank] |-|all |2010-10-04 |http://sourceforge.net/projects/pforge/files/ProjectForge/3.4.1[ProjectForge-3.4.1.*,window=_blank] |-|web-server |===",
    "tags": "",
    "url": "/download/"
  },{
    "title": "",
    "text": "{% include faqs.html multiple=\"true\" title=\"General\" category=\"general\" %} {% include faqs.html multiple=\"true\" title=\"Technical\" category=\"technical\" %} {% include faqs.html multiple=\"true\" title=\"Financial administration with ProjectForge\" category=\"financial\" %} {% include faqs.html multiple=\"true\" title=\"Technical administration of ProjectForge\" category=\"administration\" %}",
    "tags": "",
    "url": "/misc/faqs.html"
  },{
    "title": "",
    "text": ":hide-uri-scheme: :toc: :toclevels: 4 :last-update-label: Copyright (C) 2021, Last updated :sectnums: Its modern architecture is very scalable and uses encrypted communication for usage over the Internet. You can start ProjectForge as a small installation (as executable for Windows, Mac or Linux) and migrate it later, if needed, on a server farm. Your users only need a modern Internet browser. There is no need to install anything on the user's client. == Main features [cols=\"1,3\",options=\"header\"] |=== |Feature|Description |Time sheet booking|Convenient booking of the time sheets on your project tasks and issues. Templates support your team to book their work in seconds. |Data transfer tool|Share your files with other user's as well as with your customers. Full drag and drop support and secured by password. |Task trees|Organize your company, your customers and your projects in tasks with an unlimited hierarchy. Configure, where your users should book their work. |Calendar|A calendar with holidays and working days is a central view of ProjectForge. It gives you an overview of the daily work. |Team calendar|Manage and share your calendar events on all your devices and with your teams. |Gantt|Visualize your tasks with Gantt diagrams to give your customer and teams a maximum of transparency. |User management|A detailed user management gives you the opportunity to manage very detailed access rights of your users. |Business objects|There are a lot of business objects such as employees, salaries, accounting records etc. Refer the demo for further details. |LDAP support|You may run ProjectForge as LDAP client or run ProjectForge as master of your user/groups administration. All changes of users, groups and assignments will be published to the LDAP server in master mode immediately after any modification. You can administrate POSIX accounts data as well (Samba accounts will be supported with the next version of ProjectForge). |=== == Project Management [cols=\"1,3\",options=\"header\"] |=== |Feature |Description |Consumption|Track your project whenever you want. Consumption bars give you and your team members an overview: which tasks are on track and which tasks not. |Order book|Organize all offers with your project managers and key-accounters. Assign orders with their budgets to tasks for your project controlling. |HR planning|Make your multi-project management much easier by planning your team members on projects. So every employee and all project managers are every time up-to-date. |=== == Team work [cols=\"1,3\",options=\"header\"] |=== |Feature |Description |Address book|A central address book provides an Excel export as well as v-card exports. |Library|Manage your books and their lend-out-states of your library with ProjectForge. |=== == Plugins [cols=\"1,3\",options=\"header\"] |=== |Feature |Description |Software License Management|A central address book provides an Excel export as well as v-card exportsYou may organize your Software licenses with ProjectForge (Adobe, Microsoft etc.). The administrators have full access to all licenses and keys, the users only to the keys of licenses to which they're assigned. You can track the history of changes easily. Try it (within the demo system on this web site or refer the AdministrationGuide for enabling this plugin). |=== == Miscellaneous [cols=\"1,3\",options=\"header\"] |=== |Feature |Description |Full text search|With the full text search engine which is built-in you can find your data in seconds. A query syntax is provided for a customized search. |Excel-Exports|see Scripting |Scripting|The Scripting engine allows the enabled users to analyze and calculate data and generate Excel exports as well as diagrams. All data of ProjectForge is accessible via scripts. |Templating|Templates used e. g. for html-formatted e-mails are internationalized in the language of the receiver and can be configured by administrators (see AdministrationGuide). Groovy is used for enabling more complex logic and embedding other templates in a convenient way. So you can define main style templates for assuring a well-defined layout and design for all the e-mails. |Mobile devices|ProjectForge is usable with mobile devices. More and more pages are optimized for devices such as iPhone, Android etc. |=== == Financial administration [cols=\"1,3\",options=\"header\"] |=== |Feature |Description |Invoices|Organize your inbound and outbound invoices with ProjectForge. Assign the positions of your invoices to projects, releases etc. |Cost calculation|It's possible to get every time you want the profit of your projects, customers etc. See which releases or project phases were successful and where you have to improve your processes. |=== == Technical requirements - The ProjectForge server is available as a ready-to-run executable jar (for Windows, Mac, Linux and all Java-capable platforms). - ProjectForge is available as docker image. - The users only need a modern web browser to have full access to ProjectForge anywhere.",
    "tags": "deployment",
    "url": "/features/"
  },{
    "title": "Imprint",
    "text": "### Kai Reinhard #### Micromata GmbH Marie-Calm-Str. 1-5 34131 Kassel Germany #### Niederlassung: Menuhinstraße 8 53113 Bonn ### Geschäftsführung Kai Reinhard, Alexander Podlich, Stéphanie Naujock V.i.S.d.P.: Kai Reinhard Marie-Calm-Straße 1-5 34131 Kassel ### Kontakt Web: [www.projectforge.org](www.projectforge.org) E-Mail: k.reinhard at micromata.com Tel: +49 561 31 67 93-0 Fax: +49 561 31 67 93-11 AG Kassel HRB 7370 USt-ID: DE209259169 ### Copyright law / Right of use ProjectForge® is a registered trademark. The contents published on the website are subject to copy right. All photographs are subjected to the right of use. The reproduction or redistribution of part or all texts or photographs is not allowed without written permission from the copyright holder. Concept, design, structure and programming of the website are subjected to copy right law and as such may not be reprinted, reproduced or utilized in parts or in its entire form in any way without written permission from the copyright holder. It is not permitted to alter or distribute the contents of this website. Nor is it allowed to copy or to duplicate any of these for commercial purposes. Kai Reinhard cannot be held responsible for the contents of external websites to which links have been established. Copyright 2001-2021© Kai Reinhard. All rights reserved.",
    "tags": "",
    "url": "/misc/imprint.html"
  },{
    "title": "",
    "text": ":page-liquid: ++++ {% include boxes.html columns=\"3\" title=\"Why ProjectForge?\" subtitle=\"ProjectForge is developed as a professional and secure Software. A lot of features make your project management and daily work much easier! ProjectForge as OpenSource software without any limitations is for free.\" %} ++++ ++++ {% include image-block.html %} ++++ ++++ {% include videos.html columns=\"2\" title=\"Video Tutorials\" subtitle=\"Watch screencasts to get you started fast with ProjectForge\" %} ++++ ++++ {% include faqs.html multiple=\"true\" title=\"Frequently asked questions\" category=\"faq-main\" subtitle=\"Find quick answers to frequent questions asked by users\" %} ++++ ++++ {% include team.html authors=\"kai, fin, wolfgang, christian, daniel, roger\" title=\"We are here to help\" subtitle=\"Our team is just an e-mail away ready to answer your questions\" %} ++++",
    "tags": "",
    "url": "/"
  },{
    "title": "Privacy Policy",
    "text": "Wir, die Micromata GmbH nehmen den Schutz Ihrer personenbezogenen Daten sehr ernst und halten uns strikt an die datenschutzrechtlichen Bestimmungen. Im Folgenden erläutern wir, welche Daten wir während Ihres Besuches auf unseren Webseiten erfassen und wie genau diese verwendet werden. ## 1. Definitionen Cookies sind kleine Textdateien, die lokal im Zwischenspeicher des Internetbrowsers des Seitenbesuchers gespeichert werden. Die Cookies ermöglichen die Wiedererkennung des Internetbrowsers. Personenbezogene Daten sind Einzelangaben über persönliche oder sachliche Verhältnisse einer bestimmten oder bestimmbaren natürlichen Person. Beispielsweise zählen hierzu: Name, Adresse, Telefonnummer und Geburtstag. ## 2. Datenerhebung- und verarbeitung Beim Besuch unserer Webseiten, speichern unsere Webserver temporär jeden Zugriff in einer Protokolldatei. Hierbei werden folgende Daten erfasst und bis zur automatisierten Löschung gespeichert: - IP-Adresse des anfragenden Rechners - Datum und Uhrzeit des Zugriffs - Name und URL der abgerufenen Datei - Übertragene Datenmenge - Meldung, ob der Abruf erfolgreich war - Erkennungsdaten des verwendeten Browser- und Betriebssystems - Webseite, von der aus der Zugriff erfolgt - Name Ihres Internet-Zugangs-Providers Die Verarbeitung dieser Daten erfolgt zum Zweck, die Nutzung der Webseite zu ermöglichen (Verbindungsaufbau), der Systemsicherheit, der technischen Administration der Netzinfrastruktur sowie zur Optimierung des Internetangebotes. Eine Zusammenführung dieser Daten mit anderen Datenquellen erfolgt nicht. Die IP-Adresse wird nur bei Angriffen auf die Netzinfrastruktur der Micromata GmbH ausgewertet. Hierüber hinausgehende personenbezogene Daten wie Ihr Name oder Ihre E-Mailadresse werden nicht erfasst, es sei denn, diese oder weitere Angaben werden von Ihnen freiwillig gemacht, z. B. durch Nutzung des Kontaktformulars, einer anderweitigen Kontaktaufnahme oder durch Teilnahme an einer Umfrage. Über die vorstehend genannten Fälle hinaus werden personenbezogene Daten nicht verarbeitet, es sei denn, Sie willigen ausdrücklich in eine weitergehende Verarbeitung ein. ## 3. Nutzung und Weitergabe Personenbezogener Daten Jegliche Nutzung Ihrer personenbezogenen Daten erfolgt nur zu den genannten Zwecken und in dem zur Erreichung dieser Zwecke erforderlichen Umfang. Eine Weitergabe an Dritte erfolgt nicht. Übermittlungen personenbezogener Daten an staatliche Einrichtungen und Behörden erfolgen nur im Rahmen zwingender nationaler Rechtsvorschriften oder wenn die Weitergabe im Fall von Angriffen auf unsere Netzinfrastruktur zur Rechts- oder Strafverfolgung erforderlich ist. Eine Weitergabe zu anderen Zwecken findet nicht statt. ## 4. Kontaktformular Die Nutzung des Kontaktformulars kann eine weitergehende Verarbeitung personenbezogener Daten erfordern, wie z. B. eine längerfristige Speicherung Ihrer E-Mailadresse. Um unser Kontaktformular zu nutzen, benötigen wir mindestens Ihren Vor- und Nachnamen sowie Ihre E-Mailadresse, an die wir Ihnen unsere Antwort bzw. Informationen zusenden können. Weitere Angaben sind freiwillig. Die Verwendung von personenbezogenen Daten erfolgt nur, wenn Sie uns diese Daten übermittelt und in die Verarbeitung nach dieser Datenschutzerklärung eingewilligt haben. ## 5. Cookies Auf unseren Webseiten verwenden wir nur ausnahmsweise Cookies, die Daten zur technischen Sitzungssteuerung im Speicher Ihres Browsers ablegen. Diese Daten werden mit dem Schließen Ihres Browsers gelöscht. Sollten wir ausnahmsweise in einem Cookie auch personenbezogene Daten speichern wollen, etwa eine Nutzerkennung, werden Sie besonders darauf hingewiesen. Natürlich können Sie unsere Webseiten auch ohne Cookies betrachten. Auch wenn die meisten Browser Cookies automatisch akzeptieren, so können Sie das Speichern von Cookies verhindern, indem Sie dies in Ihren Browser-Einstellungen festlegen. Wenn Sie keine Cookies akzeptieren, kann dies zu Funktionseinschränkungen unserer Webseiten bzw. den enthaltenen Angeboten führen. ## 6. Web-Analyse Personenbezogene Nutzerprofile werden durch uns nicht erstellt. § 15 Abs. 3 Telemediengesetz (TMG) erlaubt jedoch zu Zwecken der Werbung, Marktforschung und bedarfsgerechten Gestaltung von Angeboten die Verwendung von Nutzerprofilen unter einem Pseudonym, sofern der Nutzer dem nicht widerspricht: Wir verwenden auf unseren Webseiten einen Softwaredienst zur Webanalyse. Aus diesen dadurch gewonnenen Daten werden unter einem Pseudonym Nutzungsprofile zu Marketing- und Optimierungszwecken erstellt. Hierzu können Cookies eingesetzt werden. Die mit den Tracking-Technologien erhobenen Daten werden ohne Ihre gesondert erteilte Einwilligung nicht dazu benutzt, Sie persönlich zu identifizieren. Die erhobenen Daten werden auch nicht mit personenbezogenen Daten über den Träger des Pseudonyms zusammengeführt. Eine webseitenübergreifende Analyse erfolgt ebenfalls nicht. Sofern Sie das Tracking technisch unterbinden wollen, können Sie JavaScript und Cookies in Ihrem Webbrowser deaktivieren. Im Übrigen können Sie der Datenerhebung und -speicherung jederzeit mit Wirkung für die Zukunft widersprechen. Den Widerspruch richten Sie bitte an: info(at)micromata.de ## 7. Plug-ins von Sozialen Netzwerken Auf unseren Webseiten verwenden wir teilweise auch Plug-ins, z. B. solche der Sozialen Netzwerke Facebook, Twitter, Google+ und XING. Diese werden oftmals in den USA oder anderen Ländern außerhalb Deutschlands und der EU technisch betrieben und teilweise über nationale Gesellschaften in der EU angeboten. Die Plug-ins sind beispielsweise mit dem Logo des Unternehmens, Kommentarfeldern oder einem sogenannten „Like-“, „Gefällt mir“ oder „+1“-Buttons gekennzeichnet. Wenn Sie eine Seite unseres Webauftritts in Ihrem Webbrowser öffnen, die ein solches Plug-in beinhaltet, stellt Ihr Webbrowser eine direkte Verbindung mit den Servern des jeweiligen Anbieters im jeweiligen Land her. Durch die Einbindung der Plug-ins erhält der jeweilige Anbieter zumindest die Information, dass Sie eine bestimmte Seite unseres Webangebots besucht haben. Gegebenenfalls werden auch weitere Informationen durch Ihren Webbrowser oder Ihr benutztes Gerät an den jeweiligen Anbieter weitergegeben. Der Inhalt des Plug-ins wird von Ihrem Webbrowser direkt vom Anbieter geladen und in unsere Webseite eingebunden. Wenn Sie bei dem betreffenden Anbieter registriert und eingeloggt sind, kann Ihr Besuch auch Ihrem Nutzer-Konto zugeordnet werden. Wenn Sie mit einem Plug-in interagieren, z. B. den „Like“-Button anklicken oder einen Kommentar in einem Formularfeld abgeben, wird diese Information zudem von Ihrem Browser direkt an den Anbieter übermittelt und dort gespeichert und ggf. weiter benutzt und veröffentlicht. Zweck und Umfang der beschriebenen Datenerhebung und Nutzung sind vor allem Marketingmaßnahmen des Anbieters und der Micromata GmbH. Einzelheiten dazu und zu Ihren Rechten und Einstellungsmöglichkeiten zum Schutz Ihrer Privatsphäre können Sie direkt beim jeweiligen Anbieter in dessen Datenschutzerklärung nachlesen. Wenn Sie nicht möchten, dass ein Anbieter über unsere Webseiten Daten über Sie sammelt, müssen Sie Plug-ins in Ihrem Webbrowser deaktivieren. Wenn Sie eine Verknüpfung mit einem ggf. bestehenden Nutzer-Konto vermeiden wollen, müssen Sie sich vor Ihrem Besuch unserer Webseiten ausloggen.Indem Sie unsere Webseiten besuchen, erklären Sie sich mit den vorstehenden Bestimmungen einverstanden. ## 8. Sicherheit Die Micromata GmbH setzt technische und organisatorische Sicherheitsmaßnahmen ein, um Ihre durch uns verwalteten personenbezogenen Daten gegen zufällige oder vorsätzliche Manipulationen, Verlust, Zerstörung oder gegen den Zugriff unberechtigter Personen zu schützen. Unsere Sicherheitsmaßnahmen werden entsprechend der technologischen Entwicklung fortlaufend verbessert. 9. LINKS ZU WEBSEITEN ANDERER ANBIETER Unsere Webseiten enthalten Links zu Webseiten anderer Anbieter. Wir weisen darauf hin, dass diese Datenschutzerklärung ausschließlich für die Webseiten der Micromata GmbH gilt. Wir haben keinen Einfluss darauf und kontrollieren nicht, dass andere Anbieter die geltenden Datenschutzbestimmungen einhalten. ## 10. Auskunfsrecht und Kontaktdaten Ihnen steht ein Auskunftsrecht bezüglich der über Sie gespeicherten personenbezogenen Daten und ferner ein Recht auf Berichtigung unrichtiger Daten, Sperrung und Löschung zu. Wenn Sie Auskunft über Ihre personenbezogenen Daten beziehungsweise deren Korrektur oder Löschung wünschen oder weitergehende Fragen über die Verwendung Ihrer uns überlassenen personenbezogenen Daten haben, kontaktieren Sie bitte: info(at)micromata.de ## 11. Einbeziehung, Gültigkeit und Aktualität der Datenschutzerklärung Mit der Nutzung unserer Webseiten willigen Sie in die vorab beschriebene Datenverwendung ein. Durch die Weiterentwicklung unserer Webseiten oder die Implementierung neuer Technologien kann es notwendig werden, diese Datenschutzerklärung zu ändern. Die Micromata GmbH behält sich vor, die Datenschutzerklärung jederzeit mit Wirkung für die Zukunft zu ändern. Wir empfehlen Ihnen, sich die aktuelle Datenschutzerklärung von Zeit zu Zeit erneut durchzulesen.",
    "tags": "",
    "url": "/misc/privacy-policy.html"
  },{
    "title": "",
    "text": ":page-liquid: ++++ ++++",
    "tags": "",
    "url": "/search/"
  },{
    "title": "Terms of Use",
    "text": "## Join us, do it yourself. The most famous OpenSource license make sure the protection of investments and the possibility for own extensions, development and improvements. ### License ProjectForge Community Edition [www.projectforge.org](https://www.projectforge.org) Copyright &copy; 2001-2021 Kai Reinhard (k.reinhard at micromata.com) Micromata GmbH Marie-Calm-Str. 1-5 34131 Kassel ProjectForge is a web-based project management tool. This software is dual-licensed. This community edition is licensed by Kai Reinhard under the following GNU General Public License: ## GNU GENERAL PUBLIC LICENSE ___Version 3, 29 June 2007___ Copyright &copy; 2007 Free Software Foundation, Inc. Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS ### 0. Definitions. \"This License\" refers to version 3 of the GNU General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code. The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. ### 2. Basic Permissions. All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. ### 3. Protecting Users' Legal Rights From Anti-Circumvention Law. No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures. ### 4. Conveying Verbatim Copies. You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee. ### 5. Conveying Modified Source Versions. You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section ### 7. This requirement modifies the requirement in section 4 to \"keep intact all notices\". c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate. ### 6. Conveying Non-Source Forms. You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying. ### 7. Additional Terms. \"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way. ### 8. Termination. You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10. ### 9. Acceptance Not Required for Having Copies. You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so. ### 10. Automatic Licensing of Downstream Recipients. Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it. ### 11. Patents. A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\". A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law. ### 12. No Surrender of Others' Freedom. If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program. ### 13. Use with the GNU Affero General Public License. Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such. ### 14. Revised Versions of this License. The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version. ### 15. Disclaimer of Warranty. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. ### 16. Limitation of Liability. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. ### 17. Interpretation of Sections 15 and 16. If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS",
    "tags": "",
    "url": "/misc/terms-of-use.html"
  },{
    "title": "Administration guide",
    "text": "Table of Contents 1. Introduction 2. ProjectForge Setup 2.1. Database 2.2. Initialization, first login and set-up dialogue 2.3. SSL / Https 2.3.1. Self-signed certificate 2.3.2. Configure the file ~/ProjectForge/projectforge.properties 2.3.3. Trust the self-signed certificate 2.4. PostgreSQL 2.4.1. Setting up the database 3. Configuration 3.1. Base directory (application&#8217;s home) 3.2. Configuration file application.properties 3.3. Customization 3.3.1. Logo ant title in pdf outputs 3.3.2. Customizing i18n translations (since 8.2) 3.4. Configuration settings (web interface) 3.5. Using ttf fonts for PDF render engine 3.6. HTML formatted E-Mail templates 3.7. Configuration of Mobile Enterprise Blogging (MEB) 3.7.1. Servlet-Call 3.8. phone calls and texting with ProjectForge 3.8.1. Phone calls 3.8.2. Texting 3.8.3. PhoneLookupServlet 3.9. business assessment / BWA 3.10. SecurityConfig 3.10.1. Secure passwords 3.10.2. Protection against brute force attacks 3.10.3. Salted passwords 3.10.4. Salted passwords with pepper 3.10.5. 2FA (two-factor-authentication) 3.11. LDAP 3.11.1. Requirements 3.11.2. Configuration 3.11.3. Local (admin) users 3.11.4. LDAP over SSL 3.11.5. ProjectForge as LDAP master LDAP entries Managing POSIX accounts 3.11.6. Managing Samba accounts 3.11.7. ProjectForge as LDAP client Simple mode Users mode Users-groups mode 3.11.8. ProjectForge without LDAP 3.12. Troubleshouting 3.12.1. NullPointerException on pages with diagrams und Linux 4. Maintenance 4.1. Updating by simple clicks 4.2. Re-indexing the database 4.3. Analysing tools 4.4. XML-backup and restore and data-base migration ( BUG -&#8594; We guarantee no guarantee, but work on the solution of the problem ) 4.4.1. Export 4.4.2. Import 4.4.3. Limitations 4.5. Backup 4.6. Restoring a backup 4.6.1. Data base 4.6.2. JCR repository 4.7. Automatical backup 4.7.1. Backup script 4.7.2. Adding crontab 4.7.3. Remote backup 4.7.4. Polling remote backup 4.8. Monitoring 4.9. Scheduler 4.9.1. Data base search index 4.10. Uninstalling ProjectForge 4.11. Security improvements 4.11.1. Fail2ban 5. Plugins 5.1. Liquidity planning 5.1.1. Description 5.2. Software license management 5.2.1. Description 5.3. ExtendEmployeeData 5.3.1. Description 5.3.2. List management 5.3.3. Paying office 5.3.4. Configuration 5.4. IHK Export 5.4.1. Description 5.5. Skillmatrix 5.5.1. Description 1. Introduction This documents describes the administration of ProjectForge®. 2. ProjectForge Setup 2.1. Database 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 #JDBC Java class spring.datasource.driver-class-name=org.hsqldb.jdbcDriver #spring.datasource.driver-class-name=org.postgresql.Driver #Database user spring.datasource.username=sa #Database password for given user spring.datasource.password= #JDBC url to connect to DB spring.datasource.url=jdbc:hsqldb:file:projectforge;shutdown=true #spring.datasource.url=jdbc:hsqldb:mem:projectforge #spring.datasource.url=jdbc:postgresql://localhost:5432/projectforge db.ds.projectForgeDs.extendedSettings=false #Sets the maximum number of active connections that can be allocated at the same time. #Use a negative value for no limit. spring.datasource.maxActive=8 #Sets the maximum number of connections that can remain idle in the pool. spring.datasource.maxIdle=8 # Sets the minimum number of idle connections in the pool. spring.datasource.minIdle=0 #Max milleseconds waiting while obtaining connection. Use -1 to make the pool wait indefinitely. spring.datasource.maxWait=-1 #Sets the initial size of the connection pool. spring.datasource.intialSize=0 #Sets the default catalog. spring.datasource.default-catalog= #Sets default auto-commit state of connections returned by this datasource. spring.datasource.defaultAutoCommit=true #Validation query to test if connection is valid. spring.datasource.validation-query= #Sets the validation query timeout, the amount of time, in seconds, that connection validation will wait for a response from the database when executing a validation query. #Use a value less than or equal to 0 for no timeout. spring.datasource.validation-query-timeout=-1 2.2. Initialization, first login and set-up dialogue After the first start of ProjectForge® you will see ProjectForge®'s set-up dialogue. Please configure at minimum the adminstrator&#8217;s password and the target (empty data-base for a productive system or pre-filled with test data). You can configure or change all other settings such as time zone, e-mail addresses etc. any time later. 2.3. SSL / Https It&#8217;s recommended to start ProjectForge on a localhost http port and to handle https over nginx or apache. For testing purposes you can use the following configuration: 2.3.1. Self-signed certificate Generate a self-signed certificate:`keytool -genkeypair -alias selfsigned -keyalg RSA -keysize 2048 -storetype PKCS12 -keystore keystore.p12 -validity 365` 2.3.2. Configure the file ~/ProjectForge/projectforge.properties File: application.properties: 1 2 3 4 5 6 7 8 ... # Bind to all interfaces, or localhost server.address=0.0.0.0 server.port=8443 server.ssl.key-store=file:/home/joe/keystore.p12 server.ssl.key-store-password=&lt;password of your certificate&gt; server.ssl.key-store-type=PKCS12 .. 2.3.3. Trust the self-signed certificate Extract: keytool -exportcert -alias selfsigned -keystore keystore.p12 -storetype PKCS12 -file selfsigned.crt -rfc Copy it e. g. to MacOS key-chain system certificates and trust it. 2.4. PostgreSQL 2.4.1. Setting up the database Edit postgresql.conf: max_connections = 50 # (change requires restart) createuser -U postgres -P projectforge as e.g. admin user. createdb -U postgres -E UTF-8 -O projectforge projectforge as e.g. admin user. You can drop any existing user and database with: dropdb projectforge and dropuser projectforge Re-use of existing database (use a dump -&#8594; 5.5 or 5.6) psql -q -f projectforge_2008-04-02_02-00.sql -U postgres projectforge 2&gt;&amp;1 &gt; log.txt Recommended settings in postgresql.conf: statement_timeout = 300000 # 300s lock_timeout = 300000 # 300s 3. Configuration 3.1. Base directory (application&#8217;s home) ProjectForge® needs a base directory which is set in application.properties of the web server. By default it is ${user.home}/ProjectForge . You should prepare this directory for use-age of ProjectForge®. The following directories will be created if not exist: ProjectForge/hibernate-search Here the lucene indices are stored. If corrupted, delete all files and directories in this directory and re-build data base indices via the web admin console. ProjectForge/resources/fonts For additional fonts used e. g. by the pdf renderers. ProjectForge/resources/images For images e. g. by the pdf renderers. ProjectForge/work For uploaded files etc. 3.2. Configuration file application.properties ProjectForge® is a SpringBoot-Application, you can get more information here. The format of the file is: File: application.properties: here 3.3. Customization 3.3.1. Logo ant title in pdf outputs At default the pdf outputs file is not present. The logo is placed at the top right. Under the configuration menu of the web application you can enter your organization name. This name will be used as headline for the pdf outputs. 1 The files must be located in the Resources/Images folder. File: projectforge.properties: 1 2 3 4 ... projectforge.logoFile= projectforge.export.logoFile= ... 3.3.2. Customizing i18n translations (since 8.2) ProjectForge allows you to customize or override any translation text displayed in the user interface. This is useful if you want to adapt terminology to your organization&#8217;s specific needs. To customize translations: Create one or more properties files in the ~/ProjectForge/resources directory: CustomerI18nResources.properties - for default/English translations CustomerI18nResources_de.properties - for German translations CustomerI18nResources_en.properties - for English translations (explicit) Add your custom key-value pairs to override existing translations or add new ones: 1 2 3 4 # Example: Override existing translation menu.addressbook.title=Contacts # Example: Add custom translation myorganization.custom.greeting=Welcome to Acme Corp Restart ProjectForge to apply the changes. Your custom translations will take precedence over the default translations included in ProjectForge. To find available i18n keys that you can override, refer to: Main application translations: I18nResources.properties Plugin translations: Search the GitHub repository for *I18nResources.properties files in the plugin directories, e.g.: plugins/org.projectforge.plugins.banking/src/main/resources/BankingI18nResources.properties plugins/org.projectforge.plugins.skillmatrix/src/main/resources/SkillMatrixI18nResources.properties And other plugin-specific translation files 3.4. Configuration settings (web interface) Please go to this page for setting different parameters of ProjectForge® such as default time zone etc. You&#8217;ll find the documentation there. 3.5. Using ttf fonts for PDF render engine FOP is used as internal render engine. For enabling True Type Fonts please refer the FOP documentation. 1 2 java -cp build/fop.jar:lib/avalon-framework-4.2.0.jar:lib/commons-logging-1.0.4.jar:lib/commons-io-1.3.1.jar \\ + org.apache.fop.fonts.apps.PFMReader &lt;path&gt;/&lt;font&gt;.pfm ttf&lt;font&gt;.xml 3.6. HTML formatted E-Mail templates ProjectForge works with Groovy templates for generating e-mails (as notifications). You&#8217;ll find the templates inside your web archive of the ProjectForge installation: plugins/projectforge-business-X.X.X.jar/mail/. You can modify any template of this directory if needed by simply copying the file(s) you want to modify into your ProjectForge application dir, which is also the destination of application.properties: cp projectforge-business-X.X.X.jar/mail/ Afterwards you can edit this file. ProjectForge looks first in this ProjectForge app directory for loading templates and if not found it uses the resources path. The templates are internationalized with the locale of the receiving user. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 &lt;html&gt; &lt;html&gt; #INCLUDE{mail/mailHead.html} &lt;body&gt; #INCLUDE{mail/mailOpening.html} &lt;br /&gt; Here you can place content (don't forget to use i18n keys for supporting internationalized e-mails). ... &lt;br /&gt; &lt;%= pf.getString(\"link\") %&gt;: &lt;a href=\"${requestUrl}\"&gt;${requestUrl}&lt;/a&gt; &lt;br /&gt; This is an example of using dynamic data (here a list of positions will be printed): &lt;table&gt; &lt;% for (position in order.positions) { %&gt; &lt;tr&gt; &lt;th&gt;&lt;%= pf.getString(\"title\") %&gt;&lt;/th&gt; &lt;td&gt;${position.title}&lt;/td&gt; ... &lt;/tr&gt; &lt;% } %&gt; &lt;/table&gt; #INCLUDE{mail/mailHistoryTable.html} #INCLUDE{mail/mailClosing.html} #INCLUDE{mail/mailFooter.html} &lt;/body&gt; &lt;/html&gt; If you don&#8217;t like html-formatted e-mails, you can simply remove all html tags (ignore the html suffix then). 3.7. Configuration of Mobile Enterprise Blogging (MEB) ProjectForge supports two ways of receiving SMS: e-mail and/or servlet-call. You can use both or at least one of the two ways: File: application.properties 1 2 3 ... projectforge.receiveSmsKey=*******SECRET******** ... ProjectForges ensures that messages will be imported only once. 3.7.1. Servlet-Call You can implement a servlet call whenever your system receives an SMS: pf.acme.com/secure/SMSReceiver?key=kds8uijkqw6idg&amp;date=20101105171233&amp;sender=01234567&amp;msg=Hello&#8230;&#8203; The format of the values are the same as described above. The encoding should be UTF-8. The key is a communication key and should be configured in your (see above). Please deploy the following php script on your Asterisk web server (many thanks to Thomas Koch for this great work): 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 #!/usr/bin/php &lt;? # SMS2ProjectForge $SMS_DIR=\"/var/spool/asterisk/sms/mtrx/\"; $PF_EMAIL=\"projectforge@change-to-your-domain.de\"; $FROM=\"smsgateway@change-to-your-domain.de\"; $PF_URL=\"https://change-to-your-domain.de/secure/SMSReceiver?key=&lt;change-to-your-key&gt;&amp;date=%s&amp;sender=%s&amp;msg=%s\"; function parseFile($file, $recipient) { if(!$file) return; if(is_file($file)) { $content = file($file); } else { print(\"$file is missing\\n\"); return; } foreach($content as $line) { if(preg_match(\"/oa=(\\d+)/\", $line, $match)) { #print(\"Absender \" . $match[1] . \"\\n\"); $oa = $match[1]; } if(preg_match(\"/ud=(.*)/\", $line, $match)) { #print(\"Text \" . $match[1] . \"\\n\"); $text = $match[1]; } } if($recipient == \"pf\") { $time = time(); #$mailtext = sprintf(\"date=%s\\nsender=%s\\nmsg=%s\\n\", time(), $oa, utf8_encode($text)); $mailtext = sprintf(\"date=%s\\nsender=%s\\nmsg=%s\\n\", time(), $oa, $text); mail($PF_EMAIL, \"SMS\", $mailtext, \"From: smsgateway &lt;$FROM&gt;\"); $url = sprintf($PF_URL), $time, $oa, urlencode($text)); $pig = fopen($url, \"r\"); # XXX check answer! #$ret = stream_get_contents($pig); } return(1); } function getRecipient($file) { if(!$file) return; # pf.2010-05-04T16:46:01-11 if(preg_match(\"/(\\w+)\\.\\d\\d\\d\\d-\\d\\d-\\d\\d.\\d\\d:\\d\\d:\\d\\d-\\d+/\", $file, $match)) { return($match[1]); } return; } ## # Main # $content = array(); if(is_dir($SMS_DIR)) { if($dh = opendir($SMS_DIR)) { while(($file = readdir($dh)) !== false) { if($file != \".\" &amp;&amp; $file != \"..\") { if(parseFile($SMS_DIR . $file, getRecipient($file))) { unlink($SMS_DIR . $file); } } } } } ?&gt; 3.8. phone calls and texting with ProjectForge 3.8.1. Phone calls If configured the users are able to initiate phone calls directly by clicking on a phone number of an address or by entering a name or a phone number in the direct phone call page. Figure 1: You can initiate a phone call by simply clicking on a phone number of an address or by entering a name or number into the number field. Please deploy the following php script on your Asterisk web server (many thanks to Thomas Koch for this great work): File: originatecall.php: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 &lt;? # originates call from ProjectForge # 03/09 by t.koch@micromata.de $USERNAME = \"admin\"; $PASSWORD = \"secret\"; function doCall($source, $target) { global $USERNAME, $PASSWORD; $socket = fsockopen(\"127.0.0.1\",\"5038\", $errno, $errstr, $timeout); if(!$socket) { return(1); } fputs($socket, \"Action: Login\\r\\n\"); fputs($socket, \"UserName: $USERNAME\\r\\n\"); fputs($socket, \"Secret: $PASSWORD\\r\\n\\r\\n\"); fputs($socket, sprintf(\"Action: Originate\\r\\nChannel: Local/%s@intern\\r\\nContext: intern\\r\\nExten: %s\\r\\nPriority: 1\\r\\nCallerid: %s\\r\\nTimeout: 8000\\r\\nVariable: var1=23|var2=24|var3=25\\r\\nActionID: ABC45678901234567890\\r\\n\\r\\nAction: Logoff\\r\\n\\r\\n\", $source, $target, $source)); return(0); if($debug) { while (!feof($socket)) { print(fread($socket, 8192)); } fclose($socket); } } $SOURCE = $_GET{source}; $TARGET = $_GET{target}; if(!is_numeric($SOURCE)) { print(2); exit(2); } if(!is_numeric($TARGET)) { print(3); exit(3); } if(doCall($SOURCE, $TARGET)) print(1); else print(0); ?&gt; Please check this servlet manually. It has to be available from your ProjectForge server. Then configure your servlet: File: application.properties: 1 2 3 4 ... projectforge.telephoneSystemUrl=http://asterisk.yourserver.org/originatecall.php?source=#source&amp;target=#target projectforge.telephoneSystemNumber=0123456789 ... 3.8.2. Texting If configured the users are able to text by clicking on the SMS symbol of an address or by entering a name or a cell phone number. Figure 2: You can send text messages by simply clicking on the SMS symbol of an address or by entering a name or cell phone number. Please deploy the following php script on your Asterisk web server (many thanks to Thomas Koch for this great work): File: sms.php: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 &lt;? /* Texting with ProjectForge and Asterisk 07.09.2009 by t.koch@micromata.de v1 */ $NUMBER = $_REQUEST{number}; $MESSAGE = $_REQUEST{message}; if(!is_numeric($NUMBER)) { print(\"2\\nwrong destination number\"); return(2); } if(!$MESSAGE) { print(\"1\\nmissing message\"); return(1); } if(strlen($MESSAGE) &gt; 160) { print(\"3\\nmessage &gt; 160\"); return(3); } $rand = rand(100000, 4000000); usleep($rand); # XXX concurrent == maximum number of b channels system(sprintf(\"/usr/sbin/smsq '--concurrent=8' '--spool-dir=/var/spool/asterisk/' '--motx-channel=DIALOGICDIVA/contr1/0193010' '--da=%s' '--motx-callerid=&lt;callerid&gt;' '--ud=%s' &gt;/tmp/sms.$rand 2&gt;/tmp/sms.$rand\", $NUMBER, $MESSAGE)); print(\"0\\nok\"); ?&gt; Please check this servlet manually. It has to be available from your ProjectForge server. Then configure your servlet: File: application.properties: 1 2 3 ... projectforge.smsUrl=http://asterisk.yourserver.org/sms.php?number=#number&amp;message=#message ... To use the full functionality of ProjectForge please configure the address book feature. Don&#8217;t forget to configure your default country phone prefix in the configuration web page. 3.8.3. PhoneLookupServlet With the phone lookup servlet a telephony system (such as Asterix) may lookup incoming phone calls: File: application.properties: 1 2 3 ... projectforge.phoneLookupKey=*******SECRET******** ... 3.9. business assessment / BWA If you work with accounting records (DATEV) you may be want to have business assessments (BWA in German). The business assessments of DATEV consists of rows. Each row has a line number (no) and a title (for displaying). The accountRange defines which DATEV accounts matches the row. Please note, that a record is assigned to the first row found. If the priority of a row is not high, the row will not be shown in the short form of business assessments. The value defines row amounts which are calculated (see example below). 3.10. SecurityConfig 3.10.1. Secure passwords Every password is stored in the database as SHA256 hashed password. For reducing brute force attacks several security mechanism are implemented. 3.10.2. Protection against brute force attacks If the user login failed (via web page or rest service) a penalty time is given for usernames and IP addresses. For every failed login for an username the penalty time is increased by one second before the next try of an username/password combination for that username is allowed. The same mechanism is used for failed login failures from an IP address (one second penalty per thousand failed logins). Please refer the source code for more information. 3.10.3. Salted passwords Since version 5.3 of ProjectForge® salted passwords are used. This means, that every password is first concatenated with an salt value (random string per user) and then hashed. Therefore so called rainbow tables are useless for attacking passwords. After migrating to version 5.3 every password is salted after login of the user or if the user is changing his password. 3.10.4. Salted passwords with pepper Since version 5.3 of ProjectForge® the administrator is able to configure a pepper string in the application.properties. Before hashing a password the pepper string is concatenated to the salt and password. Therefore no brute force attack is possible if an attacker has access to the database dump etc. Please configure the pepper string like this: File: application.properties: 1 2 3 ... projectforge.security.passwordPepper=*******SECRET******** .... All passwords are automatically updated after any login of an user (if no pepper and/or salt was yet used for the user&#8217;s password) or after any password change. 3.10.5. 2FA (two-factor-authentication) 2FA (two factor authentication) is supported: by using RFC6238, used by e. g. Google or Microsoft Authenticator. SMS if configured Fido2/WebAuthn (e. g. Yubikey) You may specify the expiry periods of 2FA for different expiry periods URL&#8217;s by shortcuts for predefined sets of uri matchers and/or own regular expressions (as uri matchers). A web filter checks for every request, if a 2FA is required and if the last successful 2FA of the current session is not older than the specified expiry period. The timestamp of a successful 2FA is stored in the user&#8217;s session as well as in any user&#8217;s stay-logged-in-session. Recoomended example configuration: File: application.properties: 1 2 3 4 5 6 7 8 9 10 11 ... # Recommended setup projectforge.2fa.expiryPeriod.minutes1=PASSWORD projectforge.2fa.expiryPeriod.hours1=ADMIN_WRITE;MY_ACCOUNT;SCRIPT_WRITE projectforge.2fa.expiryPeriod.hours8=ADMIN;SCRIPT;FINANCE_WRITE;ORGA_WRITE;HR_WRITE projectforge.2fa.expiryPeriod.days30=HR;FINANCE;ORGA projectforge.2fa.expiryPeriod.days90= # Number of days a 2FA is required, when stay-logged-in is used. Without stay-logged-in and given, a 2FA is required # after every login. projectforge.2fa.loginExpiryPeriod=30 .... Rules Expression starting with / means absolute path of uri. If expressions do start with / they will be replaced by their regex: /rs/user &#8594; ^/rs/user.*: Any uri starting with /rs/user is matching. Empty entries means: no 2nd factor Regular expressions and shortcuts should be separated by ';'. Supported shortcuts are ADMIN, HR, FINANCE, ORGA, SCRIPTING, MY_ACCOUNT, PASSWORD containing a bunch of regex. You may also use WRITE:&lt;entity-name&gt; for specifying only all write access calls of an entity (rest calls of React and Wicket actions). Reading of entities / detail view is not affected. For entities (also) available in Wicket version, use /wa/user for specifying read/write access and /wa/userEdit for specifying detail view and write access. such entities is allowed. For specifying all entity activities, use /rs/&lt;entity-name&gt; instead. You may also define own regex, such as: ADMIN;/wa/report;WRITE:user Please refer the admin&#8217;s web page &#8594; configuration &#8594; Export 2FA configuration for verifying your configuration. 3.11. LDAP 3.11.1. Requirements The LDAP must support the following additional schemas (example of slapd.conf of OpenLDAP): 1 2 include /sw/etc/openldap/schema/cosine.schema + include /sw/etc/openldap/schema/inetorgperson.schema 3.11.2. Configuration The groupBase setting is only needed in master mode. The managerUser is not needed in simple slave mode. For further information see below. File: application.properties: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ... projectforge.ldap.server= projectforge.ldap.baseDN= projectforge.ldap.managerUser= projectforge.ldap.managerPassword= projectforge.ldap.port= projectforge.ldap.sslCertificateFile= projectforge.ldap.groupBase= projectforge.ldap.userBase= projectforge.ldap.authentication= projectforge.ldap.posixAccountsDefaultGidNumber= projectforge.ldap.sambaAccountsSIDPrefix= projectforge.ldap.sambaAccountsPrimaryGroupSID= ... 3.11.3. Local (admin) users Please login by using the stay-logged-in checkbox on the login screen as administrator (no LDAP should be configured). Restart ProjectForge with LDAP configured and use the same browser. You should be logged-in. Please go to the user list and select option local user for every user who should be authenticated against ProjectForge (instead of LDAP) and save them. Now the local users may log-in without LDAP credentials. This is especially use-ful for administrator users of ProjectForge. 3.11.4. LDAP over SSL openssl s_client -showcerts -connect ldap.acme.priv:636 &gt; ldap.pem Copy the lines including -----BEGIN CERTIFICATE----- until -----END CERTIFICATE----- (including) to a file called ldap.cert. Now you can configure the certificate file in application.properties or you can import the certificate to your java keystore. The first solution is independent of your JAVA version and is recommended first. 3.11.5. ProjectForge as LDAP master The LDAP master mode is the most tested mode of ProjectForge and is used in production mode at the ProjectForge developer&#8217;s company. In this mode, ProjectForge needs a LDAP user with write access to groups and users. The ProjectForge user&#8217;s will be synchronized in LDAP. If there is any conflict between LDAP and ProjectForge, the ProjectForge settings are used. The configuration of this mode is simple: File: application.properties: 1 2 3 ... projectforge.login.handlerClass=LdapMasterLoginHandler ... This LDAP login handler has read-write access to the LDAP server and acts as master of the user and group data. All changes of ProjectForge&#8217;s users and groups will be written through. Any change of the LDAP server will be ignored and may be overwritten by ProjectForge. Passwords After each successful login-in at ProjectForge (via LoginForm) ProjectForges tries to authenticate the user with the given username/password credentials at LDAP. If the LDAP authentication fails ProjectForge changes the password with the actual password of the user (given in the LoginForm). If the user changes his password (my account &#8594; change password), the LDAP password will be changed respectively. In LDAP master mode, the user is also able to change his \"WLAN/Samba password\" (my account &#8594; change password). The password entered there, will be written to the LDAP attribute \"sambaNTPassword\". Deactivated users Deactivated users will be moved to an sub userbase called \"deactivated\". The e-mail will be invalidated and the password will be deleted. Deleted and deactivated users are removed from any LDAP group. After reactivating the user, the password has to be reset if the user logins the next time via LoginForm. Deleted Users Deleted users will not be synchronized and removed in LDAP if exist. New users New users (created with ProjectForge&#8217;s UserEditPage) will be created first without password in the LDAP system directly but with \"WLAN/Samba password\". Such users need to log-in first at ProjectForge, otherwise their LDAP passwords aren&#8217;t set (no log-in at any other system connecting to the LDAP is possible until the first log-in at ProjectForge). Modifiing fields in LDAP ProjectForge does only modify supported fields of known LDAP users. If any modification is done in LDAP of fields and users/groups known by ProjectForge they will be overwritten by ProjectForge during the next synchronization run. If any modification in other fields of LDAP users are done, the should be left untouched by ProjectForge. Synchronization After any modification of any ProjectForge user or group, the synchronization is started for all LDAP users and groups. If no modification is done, the synchronization is done approximately hourly, but only if any user activity is detected in ProjectForge. You can force a synchronization by refreshing all caches (including the UserGroupCache) in the system web page or by restarting ProjectForge. Groups and assigned users Users will be added as uniqueMember entries in the LDAP groups if also assigned in ProjectForge to the same ProjectForge group. LDAP entries See figures 3 and 4 for detailed information of how does ProjectForge stores and expect LDAP fields and object classes. Figure 3: ProjectForge uses the fields and object classes shown in this figure for users. The object class posixAccount with the fields uidNumber, gidNumber, homeDirectory and loginShell are only used and managed if configured). The field employeeNumber is used by ProjectForge for storing the primary key of the ProjectForge user entry in LDAP (for a better synchronization). So the renaming of user names should work. Figure 4: ProjectForge uses the fields and object classes shown in this figure for groups. The field businessCategory is used by ProjectForge for storing the primary key of the ProjectForge group entry in LDAP (for a better synchronization). So the renaming of group names should work. Managing POSIX accounts ProjectForge supports the management of POSIX accounts with the data uidNumber, gidNumber, homeDirectory, and loginShell. You can administer the POSIX account data in the UserEditPage after configuring the application.properties like the above example. Pleaser refer the tool-tips for further information: Figure 5: ProjectForge is able to manage POSIX accounts in LDAP master mode. After clicking the Button create beside the UID number field ProjectForge will prefill all POSIX account fields: The UID number will be the next free number (ProjectForge searches the highest used UID and increments it by one). If no such number found, 1,000 is assumed. The GID number will be preset with the defaultGidNumber configured in application.properties. The home directory will be the prefix /home/ (configured in application.properties) followed by the user-name: e. g. /home/kai The login-shell will be preset with /bin/bash or any other which is configured in application.properties. Don&#8217;t forge to save this user by clicking the save or update button on the bottom of the edit page. After changing any of these POSIX account fields the LDAP entries are update immediately. ProjectForge presets a new UID number automatically (see above). ProjectForge assures that no UID number is given twice. Every LDAP entry gets the object-class posixAccount only if the POSIX account data were created in ProjectForge for this user. 3.11.6. Managing Samba accounts File: application.properties: 1 2 3 4 ... projectforge.ldap.sambaAccountsSIDPrefix= projectforge.ldap.sambaAccountsPrimaryGroupSID= ... Figure 6: ProjectForge is able to manage POSIX and Samba accounts in LDAP master mode. After clicking the Button create beside the UID number field ProjectForge will prefill all SAMBA account fields: The UID number will be the next free number (ProjectForge searches the highest used UID and increments it by one). If no such number found, 1,000 is assumed. The GID number will be preset with the defaultSambaPrimaryGroupSID configured in application.properties. Parallel usage with POSIX, which is recommended: Please click the 'create' button near to the UID of the POSIX account, the suffix of SAMBASID will be the same UID. ProjectForge&#8217;s tries first to get the same UID for SAMBA as for POSIX if no conflict was found. Don&#8217;t forge to save this user by clicking the save or update button on the bottom of the edit page. After changing any of these Samba account fields the LDAP entries are update immediately. Every LDAP entry gets the object-class sambaSamAccount only if the Samba account data were created in ProjectForge for this user. 3.11.7. ProjectForge as LDAP client This LDAP login handler acts as a LDAP slave, meaning, that LDAP will be accessed in read-only mode. There are 3 modes available: simple, users and users-groups. The configuration of this mode is simple: File: application.properties: 1 2 3 ... projectforge.login.handlerClass=LdapSlaveLoginHandler ... Simple mode The simple mode is assumed if no ldap managerUser is given in the application.properties. Simple means that only username and password is checked, all other user settings such as assigned groups and user name etc. are managed by ProjectForge. No ldap user is needed for accessing users or groups of LDAP, only the user&#8217;s login-name and password is checked by trying to authenticate! If a user is deactivated in LDAP the user has the possibility to work with ProjectForge unlimited as long as he uses his stay-logged-in-method! (If not acceptable please use the normal user mode instead.) For local users any LDAP setting is ignored. Users mode The normal user mode is assumed if a LDAP managerUser is given in the application.properties. Normal means that username and password is checked and all other user settings such as user name etc. are read by a given LDAP manager user. If a user is deleted in LDAP the user will be marked as deleted also in ProjectForge&#8217;s data-base. Any login after synchronizing isn&#8217;t allowed (the stay-logged-in-feature fails also for deleted users). For local users any LDAP setting is ignored. All known LDAP user fields of the users are synchronized (given name, surname, e-mail etc.). Users-groups mode This mode is not yet implemented, the users-mode is used instead. 3.11.8. ProjectForge without LDAP You can also use PF without LADP. File: application.properties: 1 2 3 ... projectforge.login.handlerClass=LoginDefaultHandler ... 3.12. Troubleshouting 3.12.1. NullPointerException on pages with diagrams und Linux If you will receive exceptions while calling pages with diagrams such as under menu project management &#8594; my statistics: Caused by: java.lang.NullPointerException at java.desktop/sun.awt.FontConfiguration.getVersion(FontConfiguration.java:1262) you probably use JDK11+ and the linux package fontconfig isn&#8217;t installed. Please install this package and restart ProjectForge. 4. Maintenance 4.1. Updating by simple clicks ProjectForge provides automatically updates as built-in scripts with every new version. Refer the migration guide for required, manual changes. 4.2. Re-indexing the database Should be done after setup: Use the administration menu. 4.3. Analysing tools Useful commandes are: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ... projectforge@vprojectforge:~$ jps 19533 Bootstrap 2261 Jps projectforge@vprojectforge:~$ jstack 19533 2008-02-14 09:58:28 Full thread dump Java HotSpot(TM) 64-Bit Server VM (1.6.0_03-b05 mixed mode): \"Attach Listener\" daemon prio=10 tid=0x00002aaaf4a6e800 nid=0x8fa waiting on condition [0x0000000000000000..0x0000000000000000] java.lang.Thread.State: RUNNABLE \"http-8443-10\" daemon prio=10 tid=0x00002aaaf4a94800 nid=0x716c in Object.wait() [0x0000000041f47000..0x0000000041f47e40] java.lang.Thread.State: WAITING (on object monitor) at java.lang.Object.wait(Native Method) - waiting on &lt;0x00002aaaee262530&gt; (a org.apache.tomcat.util.net.JIoEndpoint$Worker) at java.lang.Object.wait(Object.java:485) at org.apache.tomcat.util.net.JIoEndpoint$Worker.await(JIoEndpoint.java:416) ... 4.4. XML-backup and restore and data-base migration ( BUG -&#8594; We guarantee no guarantee, but work on the solution of the problem ) ProjectForge supports the import and export of its whole data-base as XML. It&#8217;s independent from the data-base (Hypersonic, PostgreSQL, MySQL, Oracle etc.). You can choose this method to migrate your data-base from one data-base to any other data-base supported by ProjectForge. 4.4.1. Export It&#8217;s possible to export an XML-Dump from your data-base using the system administration dialogue (web). This backup contains all data of ProjectForge in one zipped xml file. 4.4.2. Import First you need a fresh data-base (without any tables and data). Afterwards start ProjectForge with the connection data to your new data-base. Upload the XML or zipped XML file inside the setup-page (which is shown automatically in your web-browser for empty data-bases). Leave any other input fields such as password etc. untouched. Press the upload button. Watch the results in the log messages. ProjectForge will verify each single entry by comparing each object of the XML file with the imported data-base objects (each single field of every object is compared.) Any inconsistency or difference is shown in the log file. Now you can login into ProjectForge. 4.4.3. Limitations The limitation is the web servers memory. It&#8217;s planned to support very large ProjectForge data-bases using different xml files. Please request this feature e. g. inside the help forum if needed. For migration without changing the data-base vendor the data-base specific dump and restore mechanism are recommended for large data-bases. Hint Please note: After an import of a dump file into a new ProjectForge installation all primary keys are changed! ProjectForge ensures the integrity of all data including the history entries. 4.5. Backup All datasets of ProjectForge® will be stored in the underlaying database (e. g. PostgreSQL). You should install an Unix cron script making frequently a backup of the database. A dump of containing table entries as SQL statements for PostgreSQL is possible by using: pg_dump -D -U projectforge -f pf_dump_`date '+%Y-%m-%d_%H-%M'`.sql 4.6. Restoring a backup 4.6.1. Data base 1 psql -q -f projectforge_2008-05-12_02-00.sql -U postgres projectforge 2&gt;&amp;1 &gt; log.txt For further details concerning dropping and creating a new data base. Don&#8217;t forget to create indices (thru admin web page)! Hint If you want to use productive data in your develepment system for testing, it&#8217;s recommended to set all e-mail addresses of the users to your developers e-mail. Also all passwords can be easily set to test123 if you user following sql statement in your test database (not productive!): 1 update t_pf_user SET password='SHA\\{BC871652288E56E306CFA093BEFC3FFCD0ED8872}', email='m.developer@acme.com/'; 4.6.2. JCR repository The JCR repository contains all uploaded files (contracts, orders etc.). The file of the data transfer boxes is not included (it&#8217;s normally to large for backup). The data transfer boxes are used for exchanging very large files between users and/or customers. For restoring a JCR backup, please refer the file backupReadme.txt inside the backup zip file. If you have a corrupted JCR repository or if you want to make a full backup, refer backupReadme.txt as well. You will also find the readme here: github.com/micromata/projectforge/blob/develop/projectforge-jcr/src/main/resources/backupReadme.txt. 4.7. Automatical backup 4.7.1. Backup script Install crontab entry as user projectforge on your ProjectForge® server starting the following script: File: pforgebackup.sh: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #!/bin/bash PGSQL_DIR=/usr/bin BACKUPDIR=/home/projectforge/backup BASENAME=projectforge PASSWD=... echo Starting backup of ProjectForge ... BACKUPFILE=$BACKUPDIR/${BASENAME}_`date '+%Y-%m-%d_%H-%M'`.sql echo Using filename $BACKUPFILE ... echo Exporting ... $PGSQL_DIR/pg_dump -D -U projectforge -W $PASSWD -f $BACKUPFILE echo Zipping backupfile ... gzip $BACKUPFILE # For using scp for remote backup: #scp $BACKUPFILE &lt;user&gt;@backup.mydomain:backup/ echo Deleting backups older than 14 days find $BACKUPDIR -mtime +14 | xargs rm echo Backup of ProjectForge finished. For allowing pg_dump without prompting password (if set), you can add the following line to: File: pg_hba.conf: 1 local projectforge projectforge ident sameuser 4.7.2. Adding crontab Adding following entry to the Unix crontab: 1 2 # run every day at 2:00 am + 0 2 * * * /home/projectforge/bin/pforgebackup.sh 4.7.3. Remote backup For remote backup via scp you need to use key authorization: Generate keys (using empty password) ssh-keygen Copy your public key, e. g. identity.pub to your backup server. Add this key on the backup server to the authorized keys. 4.7.4. Polling remote backup For security reasons it&#8217;s also possible to get the backup files from the ProjectForge® server with a cronjob starting e. g. one hour later: File: pforgePollBackup.sh: #!/bin/bash SERVER=projectforge.mydomain DIR=/home/projectforge/backup REMOTE_DIR=backup REMOTE_USER=projectforge rsync -avz -e \"ssh -P\" -C $REMOTE_USER@$SERVER:$REMOTE_DIR $DIR In that case you have to generate ssh key on your backup server and to add it to the authorized keys on your ProjectForge® server. Add the following entry to your crontab on the backup server: # run every day at 3:00 am 0 3 * * * /home/projectforge/bin/pforgePollBackup.sh 4.8. Monitoring You may monitor the login page with your monitoring tool (such as Nagios). If ProjectForge® is up and running and is full available the following comment is included in the login page: 1 &lt;-- ProjectForge is alive. --&gt; If ProjectForge® isn&#8217;t full available the following html comment is embedded: 1 &lt;-- ProjectForge is not full available (perhaps in maintenance mode or in start-up phase). --&gt; 4.9. Scheduler 4.9.1. Data base search index The re-index job starts every night at 4 AM (UTC). If an error occurs an e-mail is sent to the admin e-mail addresses configured via web administration. If not configured, no e-mail is sent. 4.10. Uninstalling ProjectForge You only need to delete the Jar-File and the working directory you&#8217;ve chosen / configured. If you&#8217;re not sure, where ProjectForge&#8217;s working directory is located, please restart ProjectForge and see for the directory in the log output or configuration tab of the standalone version. Hint Please note: If you delete the working directory, all your data base entries are deleted as well! 4.11. Security improvements 4.11.1. Fail2ban LoginDefaultHandler : User login failed: LoginDefaultHandler[ \\t]+\\: User login failed\\: 5. Plugins Some plugins which are part of the ProjectForge web app but not automatically enabled are described here. The plugins-jar must be in another folder(plugins) next to the ProcetForgeJar. The plugins are managed under Administration -&#8594; Plugins in the ProjectForge web app. After the activation, they have to restart ProjectForge. 5.1. Liquidity planning 5.1.1. Description This plugins supports the cash flow forecast for a very easy to use liquidity planning. Please refer the UserGuide for further information 5.2. Software license management 5.2.1. Description In most companies you&#8217;ve to deal with lots of Software and license keys. This plugin allows administrators and users to organize license keys: Every user is able to add a Software entry with license keys. The administrator is able to view and edit all license keys. Only users which are assigned to a Software entry (owners) are able to see the license key. The history of every entry allows to track license usage over time by the users. The history of changes is only visible for administrators and software owners. Planned features are: Upload of license files. Restricted entries (owners are only assignable by administrators). 5.3. ExtendEmployeeData 5.3.1. Description This plugin supports the HR processing of the employee data as well as in the monthly work with the employment office. The new menu items are located in the HR menu. 5.3.2. List management Under the menu item list maintenance, you can carry out mass changes on all data records in your system. You only have to select one category and then you can change it for all records. Furthermore, an Exel export of the selected category can be used to change the data offline in Exel. ( File format must be .xls ) Under the menu item list maintenance import you can import the exported and changed data quickly and easily. 5.3.3. Paying office You can export all available data for a month for the paying office in the menu item paying-office-export. In the paying-office-i#mport menu, you can import the columns for salary and remarks from [.short_text]#paying office to PF. 5.3.4. Configuration Here you can create special payments and perks that apply to all employees. These records are always kept in time. Furthermore, you can adjust the headings of the [.short_text]#paying-office-i#mport here. 5.4. IHK Export 5.4.1. Description Export of working hours for the IHK 5.5. Skillmatrix 5.5.1. Description Capture and represent the skills of the employees",
    "tags": "adminguide",
    "url": "/docs/adminguide/"
  },{
    "title": "Development",
    "text": "Table of Contents 1. Want to see it live? 2. Architecture 2.1. The layers 2.1.1. Business layer (business) 2.1.2. REST API and front-end support (rest) 2.1.3. ReactJS (webapp) 3. Backend 3.1. Why Kotlin in addition to Java? 3.1.1. Base entities (BaseDO) 3.1.2. BaseDao 4. REST API 5. UI 5.1. Responsive 5.2. Standard list views 5.2.1. Example of json format 5.3. Standard edit pages 5.3.1. Example of json format 5.3.2. Magic filter 5.3.3. REST-API: JPA entities vs. DTO 5.3.4. Putting all together in Kotlin code 6. Writing own plugins 6.1. Starting your plugin from command line 6.2. Starting and debugging in IntelliJ 6.3. Limitations in Plugins 7. Misc 7.1. Code style 7.2. Working with different data bases for testing 1. Want to see it live? You&#8217;re welcome to run ProjectForge by simply doing: Download the current version 7 snapshot (beta version): projectforge-application-7.0-SNAPSHOT.jar Run java -jar projectforge-application-7.0-SNAPSHOT.jar (Java 8 is needed). Visit localhost:8080/wa/setup Choose and enter a password for the admin and submit. ProjectForge is now creating a system with some test data in a few seconds. Enjoy it and test the REST API. 2. Architecture 2.1. The layers The main functionality of ProjectForge is to display and search data list and to modify data (CRUD - create, read, update and delete). Therefore the goal of the architecture is not to write thousands lines of code for same base functionality. 2.1.1. Business layer (business) The business layer handles all entities including access checking for CRUD operations as well as well as user services (storage for preferences etc.). 2.1.2. REST API and front-end support (rest) The REST layer provides CRUD services etc. and also front-end support functionality. These both parts might be separated, but regarding code efficiency both are combined. For using only CRUD operations (without interest in the front-end support functionality), so simply ignore some additional information in the result data (json). Yes, you&#8217;re totally right: Should you not separate front-end from back-end code more strictly? But, the code is separated and despite the fact, that UI layout info and CRUD services are combined, it should be allowed to have a server-side application support. So this REST-API is a result of efficient development without dozens of front-end and back-end developers. 2.1.3. ReactJS (webapp) The ReactJS layer handles the data and UI layout information provided by the REST API. A dynamic layout management system is used to visualize the html pages defined by the server. In addition customized components are provided for specialized functionality. Except for the customized components and pages, the client has no clue, of what entities are provided by the server. The client gets the menu from the server and calls the server for how to proceed for given entities (e. g. list or edit view of users, addresses, book, time sheets etc.). The server provides both, the data to display (model) and the layout information of how to display (view). The users actions (clicking on buttons or menu entries) results in most cases in server calls, and the server responses how to proceed: The front-end supports defined state manipulations by the server (see below, e. g. selecting favorite filter etc., or list of calendar events after selecting calendars etc.) The server may respond in addition on URLs to redirect to by the front-end. The server provides also validation information (e. g. max-length of text input fields) as well as errors after complex server-side validations after submitting a form. The front-end defines customized pages and components (non standard components are not ruled by the server). Examples: Image upload for addresses or lend-out functionality for books. 3. Backend Java is the language used since the very beginning of ProjectForge in 2001. With ProjectForge 7.x Kotlin and ReactJS is introduced. 3.1. Why Kotlin in addition to Java? Kotlin is used for smarter and less code, especially for BaseDO objects as well as for easier creation of data transfer classes for the new introduced REST API. Other advantages: Smart operations on collections (map, find, sort etc.) Immutable objects, classes and functions as default. Null safety Compatibility with JAVA code. Java and Kotlin will both exist. Only most BaseDO classes were migrated and new functionality will mostly be written in Kotlin. Please note: Kotlin must be compiled with target 1.8 (Java version) but is fully runnable on Java 9, 10 and 11 VMs. 3.1.1. Base entities (BaseDO) The BaseDO objects are the entities of ProjectForge stored in the data base. As default, all modification of entity attributes are available in a history with the information about the modification (user, timestamp, old and new value). AddressDO.kt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 open class AddressDO : DefaultBaseWithAttrDO&lt;AddressDO&gt;() { @PropertyInfo(i18nKey = \"address.contactStatus\") @Field open var contactStatus = ContactStatus.ACTIVE @PropertyInfo(i18nKey = \"name\", required = true) @Field @get:Column(length = 255) open var name: String? = null @PropertyInfo(i18nKey = \"address.phone\", additionalI18nKey = \"address.business\") @Field @get:Column(length = 255) open var businessPhone: String? = null ... } BaseDO classes must be declared as open as well as all properties. Otherwise JPA/Hibernate isn&#8217;t able to proxy these objects and lazy loading isn&#8217;t supported. As example some parts of AddressDO.kt are shown and described below: @PropertyInfo The given i18nKey is used for translating the field label and will be served for the frontend(s). The optional given additionalI18nKey is used for having an additional translated label, in the example there are different phone numbers, categorized as business or private. @Field This database field will be indexed and available for a full text search as well as for specifying search values for this field by the user. @get:Column(length=255) JPA annotations. The JPA annotations are available as Meta information from all parts and will be served for the frontends, e. g. for defining the html field max-length of input fields. Property type The property type is also available as Meta information also for the clients. The input fields of the frontend may be autodetected (string, date picker, user selectors, drop down choices for enums etc.) ContactStatus.java 1 2 3 4 5 6 7 8 9 10 public enum ContactStatus implements I18nEnum { ACTIVE(\"active\"), NON_ACTIVE(\"nonActive\"), DEPARTED(\"departed\"); public String getI18nKey() { return \"address.contactStatus.\" + key; } ... } The enumerations of type I18nEnum are also designed for auto translation purposes. The field contactStatus will be presented as a drop down choice field with translated labels. 3.1.2. BaseDao The BaseDao classes provide all CRUD operations for the BaseDO entities and will handle the access rights. No user is able to select or modify entities without the required access rights. The implementation of BaseDao for entities, such as users, addresses, books etc. extends the BaseDao object by defining the access rights and additional special functionality. The base CRUD functionality including access checks, history service etc. will be inherited. 4. REST API Since version 7.0 ProjectForge provides all CRUD operations through a REST API and much more. The user&#8217;s access rights will be checked. For available standard REST calls you may refer the REST calls described in the UI section below. 5. UI The new UI is based on REST and ReactJS. The ReactJS code includes a dynamic auto layout component for standard components, such as: For developing ProjectForge&#8217;s frontend, please refer: github.com/micromata/projectforge/tree/develop/projectforge-webapp Input Html input fields (text, date picker with text input etc.) Select boxes For selecting values for e. g. enums (auto completion and asynchronous are calls supported.) Multi select Select field for selecting multi values (auto completion, asynchronous). This may be used for selecting values as well as of selecting entities assigned to current object, e. g. users may assigned to groups or calendars are selectable for displaying. Fieldset Fieldsets with titles and length settings (Bootstrap grid system is supported) Columns Columns with length settings (Bootstrap grid system is supported) Tables For displaying result sets etc. Customized fields You may register customized UI components which will be used for displaying and modifiing values. Refer the image upload for addresses as an example. &#8230;&#8203; &#8230;&#8203; 5.1. Responsive Bootstrap is used and responsive layout control is fully supported. 5.2. Standard list views Available REST calls: Rest call Description Return values rs/address/initialList Initial call for displaying a list including layout, recent filter settings, result data and favorites. UI layout (available filter options, columns of the result data, page menu items, &#8230;&#8203;) Recent used filter settings by the user. Available personal favorites. Result set for recent filter. rs/address/list Call with current filter settings as POST parameter after clicking the search button. Result set matching the given filter settings. rs/address/filter/create For creating a new favorite filter. The current filter settings of the UI including the specified name of the new filter are required. filter (new current filter) rs/address/filter/select?id={filterId} For selecting a previous stored favorite filter. Same parameter as for initialList will be returned. UI layout New filter settings from selected favorite. Result set matching the new selected filter. rs/address/filter/update For updating the current filter with the new filter settings done by the user. rs/address/filter/delete For deleting a favorite filter. Modified list of available favorites. rs/address/filter/reset Resets the current filter by default values. The default filter. rs/address/reindexFull For rebuilding the full search index for the enties (e. g. all addresses). 5.2.1. Example of json format rs/address/initialList 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 { \"ui\": { \"title\": \"Address list\", \"layout\": [ { \"id\": \"resultSet\", \"type\": \"TABLE\", \"key\": \"el-1\", \"columns\": [ { \"id\": \"address.lastUpdate\", \"title\": \"modified\", \"dataType\": \"DATE\", \"sortable\": true, \"formatter\": \"DATE\", \"type\": \"TABLE_COLUMN\", \"key\": \"el-2\" }, ... \"namedContainers\": [ { \"id\": \"searchFilter\", \"content\": [ { \"id\": \"name\", \"filterType\": \"STRING\", \"label\": \"Name\", \"type\": \"FILTER_ELEMENT\", \"key\": \"name\" }, { \"id\": \"contactStatus\", \"type\": \"SELECT\", \"key\": null, \"required\": true, \"multi\": true, \"label\": \"Contact status\", \"labelProperty\": \"label\", \"valueProperty\": \"value\", \"values\": [ { \"value\": \"ACTIVE\", \"label\": \"active\" }, { \"value\": \"NON_ACTIVE\", \"label\": \"non-active\" }, ... ] }, { \"id\": \"modifiedByUser\", \"label\": \"modified by\", \"autoCompletion\": { \"minChars\": 2, \"url\": \"user/ac\" }, \"type\": \"FILTER_ELEMENT\", \"key\": \"modifiedByUser\", \"filterType\": \"OBJECT\" }, { \"id\": \"modifiedInterval\", \"label\": \"Time of modification\", \"openInterval\": true, \"selectors\": [ \"YEAR\", \"MONTH\", \"WEEK\", \"DAY\", \"UNTIL_NOW\" ], \"type\": \"FILTER_ELEMENT\", \"key\": \"modifiedInterval\", \"filterType\": \"TIME_STAMP\" }, ... \"actions\": [ { \"id\": \"reset\", \"title\": \"Reset\", \"style\": \"danger\", \"type\": \"BUTTON\", \"key\": \"el-17\" }, { \"id\": \"search\", ... \"translations\": { \"select.placeholder\": \"Select...\", \"task.title.list.select\": \"Select structure element\", \"favorites\": \"Favorites\", \"favorite.addNew\": \"Add new favorite\", ... \"pageMenu\": [ { \"id\": \"address.writeSMS\", \"title\": \"Write a text message\", \"i18nKey\": \"address.tooltip.writeSMS\", \"url\": \"wa/sendSms\" }, ... \"data\": { \"resultSet\": [ { \"address\": { \"name\": \"Reinhard\", ... \"filterFavorites\": [ { \"id\": 3, \"name\": \"People of Kassel\" }, ... Explanation ui Contains the page title and the layout information for the dynamic layout render engine (ReactJS). namedContainer Contains containers usable by the front-end, such as search filter and filter options. actions The action buttons to display and handle by the front-end. translations All required translations usable by the front-end for i18n. pageMenu The context menu to show on the list page including the actions to execute by the front-end. data Contains the result set with all result data matching the current filter settings. filterFavorites List of personal named filter favorites customizable by the user. key The key attribute is a service for the React client: a unique key for elements of a collection is needed by ReactJS. Visit localhost:8080/rs/address/initialList for a full example. Please login in your browser first: localhost:8080 5.3. Standard edit pages Available REST calls: Rest call Description Return values rs/address/{id} Only the entity with the given id will be returned (not used by React frontend). The pure data object. rs/address/edit?id={id} Initial call for editing. If id is not given, the layout for creating a new object is returned. UI layout including action buttons. The object data (default values for new objects or all values for editing existing objects). rs/address/history/{id} For getting the complete history of changes of the given object. All entries of the history of changes. rs/address/ac?property={property}&amp;search={search} Autocompletion: for searching all used property values (e. g. used locations of time sheets). All matching property values. rs/address/ac?&amp;search={search} Autocompletion: for full text searching all objects matching the given search string. All matching objects (e. g. addresses). rs/address/history/{id} For getting the complete history of changes of the given object. All entries of the history of changes. rs/address/saveorupdate For saving or updating objects. The new URL to redirect, if any. rs/address/clone For cloning the current displayed object. Returns the initial UI layout for new objects including the create button instead of delete and update. UI layout including action buttons. The object as clone without id. rs/address/markAsDeleted For marking historizable objects as deleted. Fails for non historizable entities. rs/address/delete For deleting objects from the data base without undo option. Fails for historizable entities. rs/address/cancel Cancel the edit page. The new URL to redirect to. 5.3.1. Example of json format rs/address/edit?id={id} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 { \"data\": { \"contactStatus\": \"ACTIVE\", \"name\": \"Schmidt\", ... }, \"ui\": { \"title\": \"Edit address\", \"layout\": [ { \"content\": [ { \"length\": 12, \"type\": \"FIELDSET\", \"key\": \"el-2\", \"content\": [ ... { \"id\": \"addressStatus\", \"type\": \"SELECT\", \"key\": \"el-9\", \"required\": true, \"label\": \"Address status\", \"values\": [ { \"value\": \"UPTODATE\", ... }] }, ... { \"id\": \"name\", \"maxLength\": 255, \"required\": true, \"focus\": true, \"dataType\": \"STRING\", \"label\": \"Name\", \"type\": \"INPUT\", \"key\": \"el-24\" }, ... \"actions\": [ { \"id\": \"cancel\", \"title\": \"Cancel\", \"style\": \"danger\", \"type\": \"BUTTON\", \"key\": \"el-137\", \"responseAction\": { \"url\": \"address/cancel\", \"targetType\": \"POST\" } }, { \"id\": \"markAsDeleted\", \"title\": \"Mark as deleted\", \"style\": \"warning\", \"type\": \"BUTTON\", \"key\": \"el-138\", \"responseAction\": { \"url\": \"address/markAsDeleted\", \"targetType\": \"DELETE\" } }, { \"id\": \"update\", \"title\": \"Save\", \"style\": \"primary\", \"default\": true, \"type\": \"BUTTON\", \"key\": \"el-140\", \"responseAction\": { \"url\": \"address/saveorupdate\", \"targetType\": \"POST\" } } ... ], \"pageMenu\": [ { \"id\": \"address.printView\", \"title\": \"print view\", \"i18nKey\": \"printView\", \"url\": \"wa/addressView?id=2\", \"type\": \"REDIRECT\" }, ... \"translations\": { \"file.upload.dropArea\": \"Select a file, or drop it here.\", \"label.historyOfChanges\": \"History of changes\", ... Explanation data Contains the result set with all result data matching the current filter settings. ui Contains the page title and the layout information for the dynamic layout render engine (ReactJS). actions The action buttons to display and handle by the front-end. pageMenu The context menu to show on the list page including the actions to execute by the front-end. translations All required translations usable by the front-end for i18n. key The key attribute is a service for the React client: a unique key for elements of a collection is needed by ReactJS. Visit localhost:8080/rs/address/edit?id=128 for a full example. May-be another id is needed, so refer the initilList for address id&#8217;s (data.resultSet.address.id, not tenant&#8217;s id)! Please login in your browser first: localhost:8080 5.3.2. Magic filter An example filter for querying a result set: MagicFilter.json 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 \"entries\": [ { \"search\": \"fin\" }, { \"field\": \"modifiedByUser\", \"value\": { \"id\": 2, \"deleted\": false } }, { \"field\": \"title\", \"search\": \"java\", \"matchType\": \"STARTS_WITH\" }, { \"field\": \"modifiedInterval\", \"fromValue\": \"2019-04-28'T'10:00:05.000Z\", \"toValue\": \"2019-04-28'T'17:00:05.000Z\" }, { \"field\": \"yearOfPublishing\", \"fromValue\": 2010 }, { \"field\": \"type\", \"values\": [ \"BOOK\", \"MAGAZINE\" ] } ] Explanation for filter settings: \"search\": \"fin\" Full text search (for all fields) with standard matchType=STARTS_WITH: fin* \"field\": \"modifiedByUser\" Selects all entries modified by the given user. \"field\": \"title\" Selects entries with the matching title. \"field\": \"modifiedInterval\" Selects entries modified in the given time interval. \"field\": \"yearOfPublishing\" Selects entries with the yearOfPublishing 2010 and newer. \"field\": \"type\" Selects entries with the type matching one of the given values. 5.3.3. REST-API: JPA entities vs. DTO For simple objects the JPA objects (BaseDO) may be used for the CRUD functionality through the REST-API. For more complex objects, especially if these objects are embedded by other entities (users, tasks etc.) a DTO (data transfer object) has to be used. In thanks to Kotlin, the creation of a DTO is very simple and efficient. Examples: Address.kt The DTO for addresses is needed, because addresses may contain images with a special handling. User.kt The DTO for users is needed, because user objects are embedded in other JPA entities. Task.kt Task is embedded by other entities as well. The base class BaseDTO provides base functionality for the automatically transformation of DTO and BaseDO. 5.3.4. Putting all together in Kotlin code Simple example (books) Class (Link) Description BookDO.kt Defines the entity BookDao.java Defines access rights and special functionality for books BookRest.kt Books with support of ReactJS as well as REST API for CRUD operations BookStatus.kt Enumeration of book status including i18n Nothing more is needed to have a simple entity provided by ProjectForge!!! No HTML, no JavaScript, nothing else. Simple example (addresses) with more fields and UI layout with more fieldsets and columns (supporting different screen resolutions, responsive). Class (Link) Description AddressDO.kt Defines the entity AddressDao.java Defines access rights and special functionality for addresses AddressRest.kt Addresses with support of ReactJS (responsive) as well as REST API for CRUD operations Address.kt Data transfer object for the client. For simple objects, the BaseDO object may be used for the REST-CRUD functionality. For more complex objects providing special functionality, the usage of a DTO is required/recommended. 6. Writing own plugins Refer ProjectForge-plugins on GitHub for examples. KTMemo as an Kotlin plugin. JMemo as an Java plugin. 6.1. Starting your plugin from command line Build jar file by calling mvn clean install. Copy jar file to plugins folder of ProjectForge home, e. g. /home/kai/ProjectForge/plugins. Tell ProjectForge where it is. You may have to options: Run ProjectForge from command line with option -Dloader.home=/home/kai/ProjectForge, or Set the environment variable before starting ProjectForge: export LOADER_HOME=/home/kai/ProjectForge. Start ProjectForge and activate the plugin as admin in the ProjectForge&#8217;s web app under menu Admin&#8594;plugins. Restart ProjectForge. 6.2. Starting and debugging in IntelliJ The loader home stuff doesn&#8217;t work if you start ProjectForge&#8217;s main in IntelliJ. Following the solution described in Stack overflow: 1. Enable profile intellij-properties-launcher in maven tab. 2. Edit launch configuration: a. Main class: org.springframework.boot.loader.PropertiesLauncher. Please note, the configuration is marked faulty, but it works. b. VM options: -Xms2000m -Xmx2000m -Dloader.home=/home/kai/ProjectForge -Dloader.main=org.projectforge.start.ProjectForgeApplication c. Environment variables: LOADER_HOME=/home/kai/ProjectForge For debugging you may attach the plugin to your IntelliJ classpath. 6.3. Limitations in Plugins Own customized components are not yet supported in UILayout for external plugins. We&#8217;re working on this issue. All other functionality seems to be available. 7. Misc 7.1. Code style The standard IntelliJ coding style is used, but tab width and indent with is 2 and continuation indent is 4. Please import code style: misc/IntelliJ/CodeStyle.xml 7.2. Working with different data bases for testing docker run -e PGPASSWORD=$PGPASSWORD -it --rm --link projectforge-postgres:postgres postgres:11.2 psql -h postgres -U projectforge create user pf2 password 'secret'; CREATE DATABASE pf2; GRANT ALL PRIVILEGES ON DATABASE pf2 TO pf2;",
    "tags": "development",
    "url": "/docs/development/"
  },{
    "title": "Installation",
    "text": "Table of Contents 1. Express installation 1.1. Docker 1.1.1. Running single docker container 1.1.2. Running as stack (docker-compose) 1.2. Java-Installation (without docker) 1.3. The installation setup wizard (for all installations) 1.4. The setup page 1.5. Activation of built-in-plugins 2. Customization 2.1. Main configuration file projectforge.properties 2.2. Configuration parameters 2.3. Special configurations, file config.xml 3. Secure http connection (SSL/https) 3.1. Using built-in functionality 3.2. Nginx 3.2.1. Prepare secure domain for setup through htpasswd (optional) 3.2.2. Configure Nginx 3.3. Apache httpd 4. Using CardDAV and WebDAV with Milton 5. Start ProjectForge (without docker) 6. Adding external plugins 7. Backups 7.1. JCR 7.2. DB backup 8. Supported Java versions 1. Express installation You may choose now between Docker based installation or normal installation. Or, as a developer, you may also refer ProjectForge on GitHub. 1.1. Docker You may install ProjectForge as docker image. You may run ProjectForge as docker image since version 8.0 on Linux (amd64 and arm64) as well as on MacOS (Intel or Silicon). We assume /home/projectforge/ProjectForge as ProjectForge&#8217;s home in this documentation, but you may choose anything else (will be created or should be empty if already exists). For test or small installations you may use the built-in database (embedded). 1.1.1. Running single docker container First start docker run -t -i -p 127.0.0.1:8080:8080 -v $HOME/ProjectForge:/ProjectForge --name projectforge micromata/projectforge Follow setup wizard below. Enjoy. Stop ProjectForge by pressing CTRL-C or docker stop projectforge. You may monitor the log file: tail -f ~/ProjectForge/logs/ProjectForge.log To stop and start use docker start/stop projectforge. For full functionality of all plugins, you should restart the docker container: docker stop projectforge docker start projectforge 1.1.2. Running as stack (docker-compose) In this docker-compose case ProjectForge is composed with a PostgreSQL docker container (for productive and larger installations). Copy and modify docker-compose.yml (change data base password). First start: docker-compose run projectforge-app Follow setup wizard below (choose PostgreSQL connection settings). Enjoy. To stop and start user docker-compose up/down. You may monitor the log file: tail -f ~/ProjectForge/logs/ProjectForge.log For configuring ProjectForge, go to ProjectForge base dir: 1. projectforge.properties for customizing settings of ProjectForge. 2. environment.sh for customizing settings of Java options (increasing memory size etc.). 1.2. Java-Installation (without docker) If you don&#8217;t want to use Docker, you&#8217;re able to install ProjectForge from the executable jar file. Install openjdk 17. Get projectForge-application_version.jar First start: java -jar projectForge-application_version.jar Here you will find the supported versions of Java: Supported Java versions 1.3. The installation setup wizard (for all installations) After first start, you&#8217;ll be asked for entering the setup wizard. Go for it. There is an console setup wizard available as well as a graphical wizard as desktop application, depending on your environment. You may choose the version if your system supports both (graphical output and terminal output). Both editions have the same functionality. Figure 1. The setup wizard (terminal edition) for choosing ProjectForge&#8217;s home directory. This step is skipped on docker based installation. We assume /home/projectforge/ProjectForge as ProjectForge&#8217;s home in this documentation, but you may choose anything else (will be created or should be empty if already exists). Figure 2. The setup wizard (terminal edition) for configuring the basic settings. Figure 3. The setup wizard (graphical edition) for configuring and testing the data base connection. You may leave the most settings as they are. You are able to change these settings later in projectforge.properties or config.xml. Directory ProjectForge&#8217;s home directory including configuration, database and working directory. Domain The domain of your system (localhost:8080 for test systems). This is needed e. g. for sending e-mail-notification to users including direct links to your installation of ProjectForge. Port ProjectForge starts the server on this port (8080 should be OK for most cases and can&#8217;t be modified for docker installation). Database Choose the data base. Embedded uses the built-in data base of ProjectForge (Hsql DB) and should be OK for test, development or small instances. In docker mode only PostgreSQL is available. Jdbc settings If you choose PostgreSQL you are able to enter the data base connection values and test them by clicking Test connection. Currency The default currency to use. Locale The default locale to use. Your users are able to choose their own language. First day The first day of week to use in the calendar views. Time The default time notation to use (customizable by the users). Setting Start ProjectForge - If checked, ProjectForge will be started after clicking Finish. For embedded data base, the data base is created. Setting Enable CORS filter - Please check only for development (React development using yarn or npm). Do not use for productive systems!!! After clicking finish, ProjectForge will be initialized and started. You may proceed with your web browser with localhost:8080 or projectforge.acme.com. If your browser doesn&#8217;t support localhost:8080, try 'http://127.0.0.1:8080/' or 'http://127.0.0.1:8080/wa/setup' or another browser. ProjectForge is only available on port 8080 from localhost due to security reasons. For using https, please refer [Reverse Proxy Setup (https)]. 1.4. The setup page Please be aware, that after your first start of ProjectForge, your page might be public and be configured by anybody else! So proceed immediately with the configuration if your new ProjectForge instance is public available. Figure 4. After starting ProjectForge the first time, a setup page is displayed. Target Choose Productive system for starting with an empty initialized data base. Choose Test system for installing a test system with lots of test data. User name The user name of the initial admin user of ProjectForge. Password Admin&#8217;s password. Default time zone Default time zone for all users, if not configured by an user und MyAccount. Calendar domain ProjectForge provides calendar and events. For having world-wide unique event id&#8217;s, choose here your personal name. Administrators ProjectForge sends e-mails to this address(es) in the case of special errors. You can specify one or more (coma separated) addresses (RFC822). Feed-back If this e-mail is given then a feedback panel will be shown if an error occurs. The user has the possibility to send an e-mail feedback (e. g. JIRA-system or help desk). Just click finish to have your ready-to-use installation. Figure 5. After initialization you will get this screen. Enjoy it! Wait until ProjectForge&#8217;s initialization is finished and enjoy it! 1.5. Activation of built-in-plugins Figure 6. You have to activate some built-in plugins if you want to use them. The plugin \"Data transfer\" is recommended. 2. Customization 2.1. Main configuration file projectforge.properties You&#8217;ll find an overview of all configuration options here: application.properties A minimal set of projectforge.properties will be installed automatically by the setup wizard. Here you may define your company logo. 2.2. Configuration parameters You&#8217;ll find further configuration params through the web application under the menu 'Administration' &#8594; 'Configuration'. 2.3. Special configurations, file config.xml A minimal set of config.xml will be installed automatically by the setup wizard. Here you may define your specific holidays. 3. Secure http connection (SSL/https) The recommended way of setting up ProjectForge is to use a reverse proxy to do the SSL termination. There are different ways to do so. 3.1. Using built-in functionality Without nginx, Apache etc. you may use the ProjectForge&#8217;s built-in functionalities, see e. g. www.baeldung.com/spring-boot-https-self-signed-certificate 3.2. Nginx 3.2.1. Prepare All of the commands below should be run with root privileges. Install Nginx: $ apt-get install nginx Get an SSL certificate(use only one of the options below) Create self signed certificate: $ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/projectforge.key -out /etc/ssl/projectforge.crt Generate an SSL certificate using Letsencrypt, note that the path in the NGINX configuration below needs to be changed when using Letsencrypt. Generate secure Diffie-Hellman parameters for key exchange (this will take a long time): $ openssl dhparam -out /etc/nginx/dhparam.pem 4096 secure domain for setup through htpasswd (optional) $ apt-get install apache2-utils $ htpasswd -c /etc/nginx/.htpasswd projectforge 3.2.2. Configure Nginx To use NGINX as a reverse proxy, it&#8217;s necessary to create a configuration file. The standard path for NGINX configurations is /etc/nginx/sites-available/, so let&#8217;s create the file /etc/nginx/sites-available/projectforge. If you want to use .htaccess to block access to the installation, you need to remove the comment character () in front of the auth_basic and auth_basic_file parameters. If you want to use HSTS (which makes browsers show an error page when the SSL certificate is invalid and/or nonexistent), remove the comment character () in front of the add_header Strict-Transport-Security parameter. Remember to replace projectforge.example.com with the actual domain you&#8217;ll run ProjectForge on! To activate the NGINX configuration, you&#8217;ll need to symlink the configuration file we just created to /etc/nginx/sites-enabled. This can be done by using the following command: $ ln -sv /etc/nginx/sites-available/projectforge /etc/nginx/sites-enabled/projectforge 3.3. Apache httpd to be defined. 4. Using CardDAV and WebDAV with Milton Place files milton.license.properties and milton.license.sig to directory ~/ProjectForge/resources/milton/ and start ProjectForge with loader path: ${JAVA} ... -Dloader.path=${HOME}/ProjectForge/resources/milton ${DEBUGOPTS} -jar projectforge-application.jar &amp; 5. Start ProjectForge (without docker) Start ProjectForge server (e.g. on localhost:8080, update the NGINX config if you use another port). Follow the configuration instruction (setup wizard in console ui or as Desktop app). (Re-)start Nginx: 3.1. SysVInit: /etc/init.d/nginx restart 3.2. SystemD: systemctl restart nginx Navigate to ProjectForge with your browser and finalize the setup. Example start script: startProjectForge.sh Example stop script: stopProjectForge.sh 6. Adding external plugins ProjectForge supports external 3rd party plugins: 1. Place your jars e. g. in /home/kai/ProjectForge/plugins 2. Tell ProjectForge where it is. You may have to options: a. Run ProjectForge from command line with option -Dloader.home=/home/kai/ProjectForge, or b. Set the environment variable before starting ProjectForge: export LOADER_HOME=/home/kai/ProjectForge. 3. Start ProjectForge and activate the plugin as admin in the ProjectForge&#8217;s web app under menu Admin&#8594;plugins. 4. Restart ProjectForge. 7. Backups 7.1. JCR Attachments will be handled through the built-in JCR module. The backups are placed in ProjectForge/backup, the daily backups will purged after 30 days keeping each first monthly backup. 7.2. DB backup You may configure a purge job in projectforge.properties: 1 2 3 4 5 6 ### If purgeBackupDir is given and exists, ProjectForge will purge daily backups older than 30 days keeping each first monthly backup. ### The filenames must contain the date in ISO format (...yyyy-MM-dd....). # This is the backup dir to look for: projectforge.cron.purgeBackupDir=/home/projectforge/backup # You may optional specify the prefix of the backup files (if not given, all files containing a date in its filename will be processed): projectforge.cron.purgeBackupFilesPrefix=projectforge_ Your daily data base backups should contain the date of backup in ISO format in its file name. Daily backups (not monthly) will be deleted after 30 days. Refer config file for all options: [github.com/micromata/projectforge/blob/develop/projectforge-business/src/main/resources/application.properties] 8. Supported Java versions Table 1. Java Compatibility (2021/04/12) Java version V7.5+ V8.0+ Comments OpenJDK 11 +++ - OpenJDK 11 was used in development (MacOS) and in production since version 7.0.0. (Linux) OpenJDK 17 - +++ Since version 8.0 OpenJDK 17 is used in development and in production. Table 2. Legend - ? + +++ doesn&#8217;t run not tested should run, shortly tested recommended, tested in production",
    "tags": "installation",
    "url": "/docs/installation/"
  },{
    "title": "Migration",
    "text": "1. Migration guide Most migrations (data base as well as data base content) will be done automatically during the start-up phase of an newer version. But there are some really small changes e. g. in config files etc. which have to be done manually, as described below. 1.1. Version 7.2 &#8594; 7.3 MEB plugin removed Please remove JIRA configuration (jiraConfig) in config.xml (if existing). Creation of JIRA issues through ProjectForge via incoming SMS isn&#8217;t supported anymore. You should also remove projectforge.receiveSmsKey and projectforge.cron.mebPolling from your projectforge.properties, if configured. The SMSReceiverServlet is removed as well. Scripting The scripting functionality is fully migrated to React. Multiple attachmentes are now supported. Therefore the files has to be addressed via `files.file instead of file (Kotlin) or script.file (Groovy) or by files.getFile(\"abcdef.xlsx\"). Also filenames will be accessible via 'files.filename' instead of filename' (Kotlin) or `script.filename. All bindings will be done automatically for the Kotlin script (of not already there). Multiple imports will be prevented by auto-inserting of imports (and bindings). 1.2. Version 6.x to version 7 Configurationparameters changed config.xml:holiday.month is now 1-based (1 - January, &#8230;&#8203;, 12 - December), was 0-based. projectforge.properties:projectforge.defaultFirstDayOfWeek=MONDAY (full name of weekday: SUNDAY, &#8230;&#8203;) Configuration parameters moved from config.xml to projectforge.properties config.xml:currencySymbol &#8594; projectforge.properties:projectforge.currencySymbol=€ config.xml:defaultLocale &#8594; projectforge.properties:projectforge.defaultLocale=en config.xml:defaultTimeNotation &#8594; projectforge.properties:projectforge.defaultTimeNotation=H24 config.xml:firstDayOfWeek &#8594; projectforge.properties:projectforge.defaultFirstDayOfWeek=MONDAY config.xml:excelPaperSize &#8594; projectforge.properties:projectforge.excelPaperSize=DINA4 PhoneLookupServlet moved from phoneLookup to rsPublic/phoneLookup",
    "tags": "migration config",
    "url": "/docs/migration/"
  },{
    "title": "Quick Start",
    "text": "Table of Contents 1. Introduction 1.1. Set-up of your team members 1.2. Set-up your company: JavaGurus Inc. 1.2.1. Create your company&#8217;s top level structure element 1.3. Create a group for all employees 1.4. Create project member group 1.5. Create your project root structure element, e. g. ACME Web portal 1.6. Assign the required team access 2. ProjectForge Quickstart Cost-unit accounting 2.1. Setting up cost objectives, requirements (optional) 2.1.1. Activating cost 2.1.2. Access rights and required group of the financial administrative user 2.1.3. Define cost2 types 2.1.4. Define customers and projects 2.1.5. Define cost2 2.1.6. Assign projects or cost2 to structure elements 2.2. ProjectForge Quickstart Calendars 2.3. ProjectForge Quickstart Best practices 2.3.1. Making your life easier: with Favorites 2.3.2. Sharing addresses and books 2.3.3. Administrators, financial administrative user, organisational staff members and controlling users 2.3.4. System administrators 2.3.5. Financial administrative users 2.3.6. Project managers 2.3.7. Controllers 1. Introduction ProjectForge® is designed to improve the efficiency of projects and project teams from single-person-projects up to large-sized projects. This document contains techniques and concepts for your successful project management, supported by ProjectForge®, the project management portal. You can use the action links while reading this tutorial and create the objects of this tutorial by simply clicking on those action links (in the html version of this tutorial). You can change the tutorial data (user names etc.) like you want. The tutorial only needs the reference names placed in the description fields. Quick start, create your first project step-by-step: ACME web portal After the creation of the users you can use the wizard of the structure tree page to generate groups and access rights very quickly. Follow this tutorial to understand the things behind the wizard&#8230;&#8203; 1.1. Set-up of your team members Login as admin user and create one account per project member (administration sub-menu users). In this example we start with three team members, one project manager and two team members: Username Description (team role) E-Mail Assigned groups linda Project manager l.evans@javagurus.com PF_ProjectManager dave Developer d.jones@javagurus.com - betty Developer b.brown@javagurus.com - 1.2. Set-up your company: JavaGurus Inc. 1.2.1. Create your company&#8217;s top level structure element Login as admin user and create a top level structure element with the name of your company (JavaGurus Inc.). Click on the menu item \"structure tree\" and on the button \"add\". Select the ProjectForge®'s root structure element as parent. Create this structure element (and click the search button in the tree view for refreshing your structure tree). Name of structure element Parent structure element JavaGurus Inc. ProjectForge®'s root structure element 1.3. Create a group for all employees Add a user group (menu item \"Administration\" &#8594; \"Groups\") named e. g. \"JavaGurus employees\". Group name Assigned members JavaGurus employees Lind, Dave, Betty. 1.4. Create project member group Go to administration &#8594; groups and create a new group: Group name Assigned members ACME web portal team Linda, Dave, Betty. Assign the members while selecting all members and clicking the left-arrow-icon. You can select multiple entries by using the keys Shift or Ctrl for assigning them at once. 1.5. Create your project root structure element, e. g. ACME Web portal Click on the menu entry 'structure tree' and create a structure element named as your project: Name of structure element Parent structure element ACME web portal Root (select parent structure element by clicking on the hierarchy icon and simply select Root). can change the hierarchy and the names of your structure elements (e. g. for organizing your projects per customer) later, so start with your project as top level structure element. Also user names, group names etc. can be changed any time you want without losing any references in the system. You can change the hierarchy and the names of your structure elements (e. g. for organizing your projects per customer) later, so start with your project as top level structure element. Also user names, group names etc. can be changed any time you want without losing any references in the system. 1.6. Assign the required team access ProjectForge® has an very detailed access management, so you can configure which user has which access to the system. Enable your ACME web portal team for working with the project. Some access rights depends on the structure elements, so define the access to a structure element by choosing the menu entry 'access management' and clicking the button 'create': Structure element Group Recursive Description Access rights JavaGurus Inc. JavaGurus employees yes The employee&#8217;s main structure element for books, addresses, for time sheets not assigned to projects such as ill-ness, holiday, research and development etc. Choose template 'employee'. ACME web portal ACME web portal team yes The top-level structure element for the ACME web portal project. Choose template 'employee'. If they&#8217;re are any labels or text fields with italic letters (such as the label 'recursive') you&#8217;ll get a tool-tip explaining the component when you place your mouse over such elements. Finish Now your project team members are able to book time sheets on your ACME web portal project. They&#8217;re also able to give their project a sub structure, explaining in the next chapter: ProjectForge Quickstart Structure of your projects ProjectForge Quickstart Structure of your projects The idea of structure trees and hierarchy ProjectForge® supports a hierarchy of your structure elements without any limitations concerning the depth of your tree or the number of your structure elements. structure element is a general term which can represent customers, projects, project phases, work packages, tasks, issues and further more. Best practice: recommended structure element structure for your projects It&#8217;s recommended to organize your project as followed, see fig. 2 for an example: Level Type Description Top level Customer e. g. ACME. This is useful for grouping a lot of projects per customers. You can start without this level and can insert it later, if needed. Level two Project name Simply the name of your project, e. g. ACME web portal Level three Release Your project will have hopefully several releases, so you can group your activities per release. In non-IT projects the release can be something such as e. g. year for annual conferences etc. Level four Phases Your project consists of several phases, e. g. akquisition, specification, build, maintenance. Level five Work packages For large projects (more than 10 md) it&#8217;s useful to break down your packages. Level six Issues For very large projects it&#8217;s useful to break down your packages in issues. If you&#8217;re using the issue tracking system JIRA it&#8217;s recommended to link the JIRA-Issues to your structure elements and/or time sheets.. Recommended structure hierarchy of a project. Please remember: You can change your hierarchy whenever you want, so you can start for example with your project as a top level structure element and insert the customer later, if you'll have more projects and customers. You can add sub structure elements by selecting your the parent structure element and pressing the button 'create structure sub element'. A more convenient method to organize the structure tree of your project is by using the menu entry Gantt. ProjectForge Quickstart Time sheet booking Adding time sheets All team members should book every activity on the project as time sheets. They can book their time sheets in a very convenient way. The easiest way is to use the calendar, click on a day or the start-/stop-times of an existing time-sheet to book new time sheets. Every time sheet needs at least a start- and stop time, the structure element on which the user has worked on. Optional the user can enter a JIRA-issue-id for having a direct link to your JIRA-system. Please choose yourself as the user in the calendar view by simply clicking on the smiley at the right top, for displaying all your time sheets you have already booked. Consumption of work packages For getting an overview every time you work with ProjectForge® it&#8217;s recommended to configure your estimated time budgets to every structure element. If the user books his time sheet on a structure element he can instantly see the consumption of this structure element. In the structure tree you can see all consumptions of every displayed structure element. There are two ways to configure budgets. The easiest way is to enter the budget in hours on every structure element. If a structure element has structure sub elements with given maximum hours and the structure element has itself no budget setting, the budget for this parent structure element is automatically calculated (sum of all structure sub elements budgets). The other way is to define your budgets by assigning orders (described not here). You can mix both approaches. ProjectForge Quickstart Gantt charts Planning a project and controlling a project to keep the project on track, Gantt charts are a very often used technique. ProjectForge® supports Gantt charts as described in this chapter. You can edit all Gantt parameters such as start/stop dates, duration, predecessors etc. by editing the structure element in the structure tree. But it&#8217;s more convenient to edit the parameters of the structure element in the Gantt tree directly. You&#8217;ll get the Gantt functionality by choosing the menu entry 'Gantt'. Add a new chart and choose your structure element (project, release of project phase) you like to plan. In this example we choose the project&#8217;s main structure element 'ACME web portal'. 2. ProjectForge Quickstart Cost-unit accounting Project managers and especially controller like reports, reports and reports. If you like to answer one of the following questions regarding your project(s), you should use the cost features of ProjectForge® as introduced below. What is the profit of our project ACME Web portal and of the company ACME over all? How many travel costs did we spent for the project ACME Web and for the ACME company at all? How many costs did we spent for the warranty for &#8230;&#8203;? How many costs for acquisition for &#8230;&#8203; What was the budget for R&amp;D for our whole company? 2.1. Setting up cost objectives, requirements (optional) Following steps are required to enable your ProjectForge installation for having cost objectives: 2.1.1. Activating cost Set the flag \"is cost activated\" to true (see configuration menu). 2.1.2. Access rights and required group of the financial administrative user Please ensure that the financial administrative user is assigned to the group PF_FINANCE and the right \"cost *\" is set to read/write, same for projects. 2.1.3. Define cost2 types You&#8217;ve to define cost2 types which are valid for all structure elements and projects. Later you&#8217;ll be able to do cost calculation based on those cost type, e. g. how much profit do you have with \"maintenance\" for all projects of customer ACME. Here is an example list to get an idea (feel free to find your own numbers and descriptions, you can extend this list any time later): Number Description 00 akuisition 02 realisation (invoiced) 03 testing (invoiced) 04 maintenance (invoiced) 05 license fees (invoiced) 06 specification/documentation (invoiced) 07 warranty 08 project management (invoiced) 11 meetings 12 meetings, invoiced (invoiced) 13 travelling 14 traveling, invoiced (invoiced) 20 R&amp;D &#8230;&#8203; Please note: invoiced is only a flag which you can use later in your reporting scripts. 2.1.4. Define customers and projects For project/customer specific cost objectives you&#8217;ll need to define customers first and then the customer&#8217;s projects. It&#8217;s a best practice to have a misc project for every customer to assign time-sheets and cost which aren&#8217;t specific to a project or for small projects where you don&#8217;t need a separate cost calculation for. 2.1.5. Define cost2 You can define cost2 entries (independent from projects) or project specific cost2 entries by selecting the project first. 2.1.6. Assign projects or cost2 to structure elements You can assign projects to structure elements in your structure tree (in the project edit page) or by adding non-project-specific cost2 entries directly to a structure element. For project-specific cost-assignments you can use a black/white-list to reduce the available cost2 objects for a sub structure element / or structure sub tree. Please see the structure element edit page for a better understanding. 2.2. ProjectForge Quickstart Calendars Please refer the user guide for further information. 2.3. ProjectForge Quickstart Best practices Fast and mouse-less editing - default buttons In almost all dialogs the change button is the default submit button (green button). This button is used automatically if the user hits the RETURN key inside form fields. In Text-areas you may use the CTRL-RETURN key because the normal return key produces a new line. 2.3.1. Making your life easier: with Favorites As a project manager you need often to select users, so have a look at the select box right to each user selection panel. Select a user and then choose 'create' for generating a favorite entry for users. It&#8217;s also possible to create favorites for structure elements, time sheets (templates) etc. You can manage your favorites by choosing the menu entry 'my preferences'. 2.3.2. Sharing addresses and books Go to \"Administration\" &#8594; \"Settings\" and configure the top level structure element of your company (JavaGurus Inc.) as default value for addresses and books. Afterwards all your employees are able to work with your library and company address book. 2.3.3. Administrators, financial administrative user, organisational staff members and controlling users In larger companies it&#8217;s use-full to split this role. 2.3.4. System administrators You should have system administrators who&#8217;re responsible to manage users, groups and access rights to structure elements and functionalities. 2.3.5. Financial administrative users You should have users of your financial administrative staff who&#8217;re responsible to manage employees (and salaries), customers, order book, cost objectives, projects as well as invoices (outbound and inbound). You can specify which rights each user should have. The user&#8217;s of the group \"PF_Organization\" (if exist) have reduced rights at default. 2.3.6. Project managers Project managers are able to plan human resources and to organize the order book for the projects they&#8217;re members of the project manager group (set in project details). 2.3.7. Controllers Members of the group \"PF_Controlling\" have read-only access to most areas of ProjectForge at default. The also have the possibility to use, create and modify scripts. The scripts are run with read-only access. The rights of the user who runs a script is checked for every object read of the data-base. If the user has no read-access to one object, the object is removed from the result-set. (In future releases scripting will be accessible by all user with the \"scripting\"-right). ProjectForge ensures, that a scripting user will always have access to only those objects he has the read-access for. But you should only give this access to well-known users, because a fraud has the possibility to get write access via e. g. Java reflection API.",
    "tags": "setup",
    "url": "/docs/quickstart/"
  },{
    "title": "Technologies",
    "text": "Table of Contents 1. Supported browsers 2. Professional architecture and CI (continuous integration) 3. Rapid Application Development Approach (RAD) 4. Technological requirements for the ProjectForge server 5. Technologies 1. Supported browsers ProjectForge is mainly developed under FireFox and Apple Safari.Please refer the following table to see the status of browser interoperability of the current release: Browser Score Description Apple Safari ++ Well tested, works fine. Chrome ++ Well tested, works fine. Firefox ++ Well tested, works fine. Microsoft IE + Quickly tested, seems to work (since ProjectForge&#8217;s migration to Bootstrap). 2. Professional architecture and CI (continuous integration) ProjectForge is based on a modern and professional software architecture which is commonly used in theindustry. A professional roles and right management assures that every user can only see and use those data for which he has all the required rights and roles for. The high quality and reliability of ProjectForge base, last but not least, on a lot of automatically test cases. The more than 250 test cases are running daily, there are part of a professional CI-system (continuous integration). A high value of data integrity and security is therefore assured. 3. Rapid Application Development Approach (RAD) ProjectForge is characterized by a rapid application development approach. This means: Write the entity as Java beans and define the data base mapping with annotations (JPA) Write simple html pages (Wicket / React) Write the business logic in Java/Kotlin (not in jsp or something comparable) Derive ui classes (list and edit forms) from the base classes. Derive data access objects from the base objects (security, access management, persistancy). The mission: Develop entities of new functionalities with lists and edit screens in just a few hours! Secure access checking Fully indexed (search) History of every user&#8217;s modifications Full data base support Support of object oriented html pages and components (powered by Wicket)! An established developer should focus on the essentials! 4. Technological requirements for the ProjectForge server Java 8 might work also with ProjectForge 7, but OpenJDK 11 is recommended (tested in several productive environments), PostgreSQL (optional), Linux, Mac OS X, Windows. 5. Technologies Technology Usage Java/Kotlin Base technology Hibernate / MGC Persisting framework O2R, R2O, JPA 2 Spring Boot Application React / Wicket Web framework Wicket will be replaced by React. JCR JackRabbit for document storage (used by data transfer tool and others) FOP For the creation of PDFs, e. g. the user time sheets, monthly employee reports etc. JUnit Test framework GitHub actions CI - continuous integration system Groovy/Kotlin Script Used for scripting ProjectForge for reports (MS Excel exports, charting etc.) as well as for e-mail templating (see AdministrationGuide for further information). Jasperreports For generating reports. JFreeChart For internal graphics and diagrams as well as for usage in the groovy scriptlets by the users, e. g. for reports. Maven3 Building system, testing, staging and Jar-management. EasyMock / Powermock For using mock objects in JUnit-tests MPXJ For exporting MS-Project plans: MPXJ home page POI For the creation and manipulation of Excel files (also supported in the user scripts). SVG (batik) For drawing Gantt diagrams",
    "tags": "technologies",
    "url": "/docs/technologies/"
  },{
    "title": "User guide",
    "text": "Table of Contents 1. Introduction 2. Common concepts 2.1. Full-indexed search 2.1.1. Automatical wildcards 2.1.2. Search for structure elements 2.2. Quick-select 2.3. Filter for search in history of changes 2.4. Auto completion 2.5. Favorites / bookmarks 2.5.1. Favorites / bookmarks in list views 2.5.2. Favorites / bookmarks of time-sheets 2.6. Stay logged-in 3. Calendar 3.1. Quick-time-period-selection 3.2. Holidays 3.3. Support of different time zones 3.4. View modes 3.4.1. Calendar views: month, week, day 3.4.2. Customizable views with fast switch 3.5. Drag &amp; drop and range-select functionality 3.6. Roadmap 4. Address book 4.1. Reverse search of phone numbers 4.2. Personal favorites 4.2.1. Export of vcards Hint for Apple contacts 4.2.2. Export of personal list of telephone numbers 4.2.3. Personal list of phone numbers for your Snom telephone 4.3. Export of the list of addresses 4.4. Animation of phone number / zoom 4.5. Direct call via telephony system 4.5.1. Configuration 5. Structure elements in ProjectForge (former tasks) 5.1. Consumption 5.1.1. Consumption bars for open structure elements 5.1.2. Consumption bars for finished structure elements 5.1.3. Suppressing the status of consumption bars 5.2. Booking of time sheets 6. Order book 6.1. E-mail notification 7. Scripting in ProjectForge® 7.1. Examples 7.1.1. Example: Easy Excel-file generation 7.1.2. Example: Usage of ProjectForge® filters 7.2. Access rights (DAOs) 7.3. Creation of diagrams and charts 7.4. Creation of zip archives containing multiple files 7.5. Nested and indexed properties 7.6. Import of Excel files 8. Financial administration with ProjectForge® 8.1. Invoices 8.1.1. Assignment of cost units 8.1.2. Clone functionality for invoices (inbound and outbound) 8.2. Liquidity planning / forecast 8.2.1. Calculation of expected dates of payments 8.3. Datev-Import (German) 8.3.1. Grundsätzliches zum ProjectForge®-Excel-Import Schritt 1: Auswahl der zu importierenden Excel-Datei Schritt 2: Daten werden eingelesen Schritt 3: Verproben Schritt 3: VerprobenPrüfen, selektieren und Übernahme Schritt 5: Import abgeschlossen 8.3.2. Import der Buchungskonten (Kontenplan) Format 8.3.3. Import der Buchungssätze (01-12) Format 8.4. Other imports 8.4.1. Salaries of employees 8.5. Time sheets 8.5.1. Protection 8.5.2. Cost units 8.5.3. Booking of time sheets 8.5.4. Monthly employee reports 8.5.5. JIRA support 8.6. Cost unit accounting 8.6.1. Fraction of working time 8.7. Reporting via Report objectives (in progress) 9. Data protection 9.1. Passwords 9.2. History of changes 9.3. Logging 9.4. Phone call - numbers 10. Glossary 1. Introduction This document includes some hints tips and best practices for the usage of ProjectForge®. It will never contain the whole functionality of ProjectForge® because a well-designed web application is easy to use and self-explained by tool tips etc. 2. Common concepts 2.1. Full-indexed search All list views support a search field. Refer the tool tip to see which fields of the data objects are part of the index. (see figure 1). Figure 1: Enter a free text in the search field to start a full text query. Part of words are as well supported as logical expressions. A detailed description of the possibilities may be find on Lucene page lucene.apache.org/core/2_9_4/queryparsersyntax.html. The following table shows some common used queries. Expression Function abc The search result contains all objects with fields contain words beginning with 'abc'. The search isn&#8217;t case-sensitive. *abc* The search result contains all objects with fields contain words containing 'abc'. The search isn&#8217;t case-sensitive. meier~ Phonetic search: Fields containing e. g. 'mayer' will also be found as 'meier'! abc def Searches for fields which contain words beginning with 'abc' and/or 'def'. +abc -def Search for fields containing words beginning with 'abc' but not with 'def'. name:abc def Search for all objects where the field 'name' contains words beginning with 'abc' and searches for 'def' in all object fields. 2.1.1. Automatical wildcards Hint If the search field contains only sub-string with alphanumerical characters (including @._* and spaces) ProjectForge® appends automatically the wildcard character '*'. For all other expressions the entered term will be leaved untouched. Logical expressions of Lucene (the keywords AND, OR and NOT) will also be leaved untouched). Expression Modification by ProjectForge hello hello* hello ProjectForge hello* ProjectForge* k.reinhard@projectforge k.reinhard@projectforge* hello AND 2008-11-21 NOT hurz OR test hello* AND 2008-11-21 NOT hurz* OR test* (Expressions containing special characters such as -+, will be leaved untouched.) hello AND name:hurzel hello AND name:hurzel hello AND name:hurzel (no substitution because of ':'.) +hello and hurzel hello and hurzel + (no substitution because of ''.) If in doubt, ProjectForge® displays any substitution of the user&#8217;s input below the search field.d). 2.1.2. Search for structure elements ProjectForge® searches also for names of ancestor structure elements. If you search for time-sheets for 'Yellow logistics' all time-sheets assigned to the structure element 'Yellow logistics' or descendant structure elements will be found. 2.2. Quick-select If you choose any list view for selection (e. g. structure element) and only one entry is found by the search this entry will be selected automatically and ProjectForge® returns to the caller page. 2.3. Filter for search in history of changes Almost all list pages supports an extended filter for searching for objects regarding the history of changes, e. g. the user wants to find any object which was changed during the last 10 minutes etc. Click on the plus sign at the right bottom of the search field&#8217;s label to see the opportunities. All other filter criteria will also be used. (see figure 2) Figure 2: Through the extended search filter you may search for objects which were changed during a given time period. _ _ 2.4. Auto completion For more and more fields an auto-completion is supported. After entering 2 characters a list of entries suggested by the server will be displayed for a convenient selection. You may enter the cursor up- and down-keys to select entries without using your mouse. A double-mouse-click, if supported by the input field, will show recent used entries or a list of all available objects. 2.5. Favorites / bookmarks For sending pages of ProjectForge® as link via e-mail or for bookmarking them in your browser, you should use the menu entry 'Show as bookmark'. ProjectForge® offers a link including all settings of the page (e. g. the filter settings of the list view). Please do not use the displayed url in your browser because this URL isn&#8217;t valid outside your current session. 2.5.1. Favorites / bookmarks in list views As figure 3 shows ProjectForge® offers two links in list views: Direct link for list view without preset of the filter parameter (the default view is used with the recent parameters). Direct link for list view with preset of the filter parameters. Figure 3: This figure demonstrates the bookmarking functionality of the list views. The first link contains only a bookmark for the list view without the preset of any parameters (the default view is used). The second link contains a bookmark with the preset of all filter parameters. 2.5.2. Favorites / bookmarks of time-sheets As figure 4 shows, ProjectForge® offers also two links in time-sheet edit pages: Direct link for displaying an object by id. Direct link including parameters for calling the edit page with pre-filled parameters. This is useful for adding new time-sheets with pre-filled parameters. The second link may be used for creation of new time-sheets with templates (e. g. in JIRA or e-mails). Figure 4: Bookmarks 2.6. Stay logged-in On the login-screen the user may choose the 'stay-logged-in' option. ProjectForge® creates a browser cookie with a validity of 30 days. At the next login from the same browser ProjectForge® detects this cookie, renews it and proceed the automatical login. If the user chooses the menu entry 'log-out' the cookie will be deleted (if exists) and the user/passwort authentication is required again in this browser. The cookie will be invalid if the user haven&#8217;t used it for 30 or more day or the user&#8217;s password and/or username has been changed. The cooky stores the user id, the username and a code. All three parameters are checked by ProjectForge®. Under 'My account' the user may renew the previous mentioned code. All stay-logged-in-sessions in all browsers are invalid directly after renewing this code. Please note: Any valid session isn&#8217;t effected by this action. The stay-logged-in option may be re-activated at any time after entering username and password on the login-screen. 3. Calendar The calendar is one of the most important functionalities of ProjectForge®. You may organize your time-sheets and personal events as well as team events in a convenient way. ProjectForge® is designed to improve the efficiency of projects and project teams from single-person-projects up to large-sized projects. 3.1. Quick-time-period-selection You may browse very fast through month and/or weeks with the following element of ProjectForge®. (see figure 5) Figure 5: Quick-time-period selection with browse mode for months and weeks 3.2. Holidays ProjectForge® support holidays and you may configure own holidays in config.xml. 3.3. Support of different time zones ProjectForge® supports different time-zones at once. The user may change his time-zone if he travels through different time-zones. 3.4. View modes 3.4.1. Calendar views: month, week, day Figure 6: Month display mode of team calendar. Figure 7: Week display mode of team calendar. The red line is the current time-line. 3.4.2. Customizable views with fast switch You&#8217;re able to customize different filters of your calendars to show and use. Switch the view with only two clicks. You may give your different calendars different colors. Figure 8: Customize your view filters with own colors etc. You may switch the view with only two clicks. 3.5. Drag &amp; drop and range-select functionality You may create, move, resize and copy events by drag&amp;drop and range-select functionality. The the videos or demo system for experience this convenient feature. Download and subscription of calendars You can download or subscribe all calendars as ics files. Subscribe ProjectForge&#8217;s calendars in Google calendar, MS Outlook oder Apples iCal. Figure 9: An example of subscribed calendars of ProjectForge in Apple&#8217;s ical. Figure 10: An example of subscribed calendars of ProjectForge in Apple&#8217;s ical. Share your calendars Use ProjectForge for team calendars. How to add a new calendar. Recurrence ProjectForge supports recurrence of events. You may remove or modify single events or future events of recurrence events. Figure 11: You may remove or modify single events or future events of recurrence events 3 access modes Full access The assigned groups and users are able to read, insert, update and delete any event of the calendar.- Read-only access The assigned groups and users are only able to read all events including the subscription and download. Minimal access The assigned groups and users are only able to read all event start and stop times including the subscription and download. All other properties of events such as title, notes etc. are removed and aren&#8217;t visible. Figure 12: You may configure the access to any calendar for groups and/or users. Import new events per Drag&#8217;n drop You may import new events by simply dropping the ics files into the drop area at the top of the calendar page. 3.6. Roadmap Further planned developments are described here. Attendees ProjectForge user&#8217;s as attendees Badge with new invitations. External user&#8217;s as attendees Invitation per e-mail Send e-mail with an ics attachment, a summary and a link to accept/deny and comment an invitation. User&#8217;s e-mail as return-to-address The return-to-address will be the user&#8217;s e-mail address, so any response of invitation is sent to the user and has to be handled by the user. ProjectForge&#8217;s e-mail as return-to-address The return-to-address will be ProjectForge&#8217;s e-mail address, so any response of invitations is parsed by ProjectForge and the event is updated. Update events and multi event import Currently ics files can be dropped as files into ProjectForge only if the contain only a single event which isn&#8217;t already present. Later an update dialog with differences to accept/deny will be shown and a multi-import should be supported. More complex recurrence pattern Subscription of external calendars in ProjectForge Starting with icloud. An user is able to share his icloud calendars via ProjectForge. 4. Address book 4.1. Reverse search of phone numbers ProjectForge® adds every phone number without any special characters and white spaces to the search index. You may enter any sub string of the phone number to find the address connected to this phone number (if exist). Hint Sometimes you may omit the country prefix of the phone number to find the address. 4.2. Personal favorites You may import addresses of the list view in your personal address book (e. g. Apple contacts) and synchronize the addresses with your mobile device. The export format is VCard (vcf) for addresses and a csv format for phone numbers (e. g. for your telephony system). Your favorite addresses will be highlighted in the list view. 4.2.1. Export of vcards You may choose the check-box 'Favorite' beside the form of address in the edit view of an address for marking the whole address as favorite (see figure 13). Click the button 'Export vCards' for downloading all marked addresses. You may choose single phone number for exporting them in csv format by clicking the check-box '*' right after the desired phone number. Hint Please use UTF-8 as encoding in your address book software! Figure 13: This figure demonstrates the possibility to mark addresses or phone numbers as favorites. Hint for Apple contacts Multiple exports of addresses may result in multiple note entries. Please use the following Apple script for removing such multiple note entries: 1 2 3 4 5 6 7 8 9 tell application \"Address Book\" repeat with thisPerson in every person if (exists (note of thisPerson)) and ((note of thisPerson) contains \"CLASS: WORK\") then log \"Name: \" &amp; (name of thisPerson) delete note of thisPerson end if end repeat save end tell You may excecute this script directly in your Apple-Script editor. (The result 'missing value' is expected.) Afterwards you should import the ProjectForge® download (vCard). 4.2.2. Export of personal list of telephone numbers You may export telephone numbers of addresses (marked in the address edit page by clicking the check-box '*', refer fig. 13). You may import phone numbers to your mobile device or system telephone (e. g. SNOM telephone) if vCard isn&#8217;t supported. Via the button 'Export phone list' all' all marked phone numbers will be exported with ISO-8859 encoding as csv file. ProjectForge® extends the names of the contacts automatically with \"mobile\" or \"private\", if the number is not the business phone number. 4.2.3. Personal list of phone numbers for your Snom telephone The exported list may be uploaded directly via the web site of the desired Snom telephone. The following figures 14 and 15 demonstrate the procedure of such an import. Hint Any previous imported phone number will be overwritten (no multiple entries are expected). 4.3. Export of the list of addresses You may export the current displayed list of addresses for usage with LibreOffice or MS Excel. For reasons of data-protection only the user&#8217;s favorite addresses will be exported. Members of the groups PF_Finance or PF_Marketing are able to download all address for using them for marketing events etc. Hint The first address of each row is the mailing address. It&#8217;s the postal address if exist, otherwise the business address. 4.4. Animation of phone number / zoom Figure 16 shows the Mouse-over-functionality, if the mouse cursor is positioned over a phone number. You may dial the number with your phone now. Figure 16: Animated zoom of phone numbers 4.5. Direct call via telephony system The user may configure one or more telephone numbers under 'My account'. Afterwards he is able to initiate phone calls directly from ProjectForge® if configured by the administrators and supported by the telephony system. Figure 17 demonstrates the possibility to initiate a phone call directly from ProjectForge®. Figure 17: shows the auto-completion functionality to initiate phone calls very easy. Hint Please use the 'return' key for initiating the phone call. Like on most pages the 'return' key result in the default action. Figure 18: 4.5.1. Configuration Please add your personal phone number (or a list of phone number) under 'My account'. 5. Structure elements in ProjectForge (former tasks) The term 'structure element' is used in a generic way and represents customers, projects, releases, structure elements etc. They&#8217;re organized hierarchical. Access rights may depend on structure elements (and are derived from ancestor structure elements if configured). Figure 19 shows a typical tree view of structure elements in ProjectForge®. Figure 19: Hierarchy of structure elements in ProjectForge® The following table describes the fields of structure elements: Field Description Parent structure element The structure element is a descendant structure element of the parent structure element. The structure elements at the top of the hierarchy is the root node which is the onliest structure element without a parent structure element. Name Referenz Multi purpose field, optional. This field is derived for all descendant structure elements if not overwritten in such structure elements. This is useful for exports etc. Status Priority Short description Description Progress optional without further functionality. Maximum hours If given, the consumption will be displayed in the structure tree as well as during booking a time sheet, see 5.1 . Responsible ProjectForge®-User for information Cost2 All cost2 values are project specific if a project was assigned to this structure element or any ancestor structure element. The black list defines cost 2 entries which should be excluded of the assigned project. If no project is assigned, cost 2 value are configurable by using a white list. Protect time sheets until If set, only time sheets with start dates after the given date may-be inserted and updated. Members of the financial staff are able to insert, update and delete older time-sheets of other users (not own time sheets). Protection of privacy If checked the time sheets of this structure element and any descendent structure elements are invisible for other users (except the members of the financial staff). 5.1. Consumption Consumptions are displayed as part of the structure tree as well as during every booking process of time sheets. The consumption of already used hours of a structure element including all structure sub elements is displayed as a tool tip. 5.1.1. Consumption bars for open structure elements Color Meaning Tool tip No budget given Total consumption in man-days. Consumption 0-80% Total consumption in man-days and percent, green bar. Consumption 80%-90% Total consumption in man-days and percent. Consumption 90%-100% Total consumption in man-days and percent. Consumption over 100% Total consumption in man-days and percent. 5.1.2. Consumption bars for finished structure elements Color Meaning Tool tip No budget given Total consumption in man-days. Consumption 0-100% Total consumption in man-days and percent. Consumption 100%-110% Total consumption in man-days and percent. Consumption über 110% Total consumption in man-days and percent. 5.1.3. Suppressing the status of consumption bars Enter 0 as maximum hours of a structure element for suppressing the status (color and percentage) of a consumption bar. This is use-ful for not demotivating a team or if not all orders with budgets are assigned to a structure element. 5.2. Booking of time sheets Time sheets must be assigned to a structure element. For improving the quality of time sheets different rules may be defined in ProjectForge®. Following rules are implemented, if the user doesn&#8217;t hit the rules he won&#8217;t be able to book his working time on such structure elements. The user needs the access to this structure element or any ancestor structure element including the right of booking time sheets. The structure element or any ancestor structure element may not have a time-protection setting. The users will not be able to modify or add time sheets for a day before time-protection (date field). The structure element or any ancestor structure element is closed or deleted. The booking status of a structure element or any ancestor structure element is 'completely closed'. If the structure element is not a structure leaf element (has descendents) and the booking status is configured as 'only leaf nodes'. If any descendent structure element has an assigned order. This rule is important because otherwise ProjectForge® won&#8217;t be able to calculate the consumption of budgets defined by orders. If a structure element is closed for booking of time sheets the user may modify fields not affecting financial parameters (such as description but not times, duration, cost settings etc.) The user may therefore correct typos etc. in time sheets. 6. Order book Offers and orders may be managed by ProjectForge®. The may-be assigned to project managers having access to their orders and offers. Administrative staff members may have access to all orders if they have the right to do (see user administration of ProjectForge®). 6.1. E-mail notification All modifications of orders, if not done by the project manager itself will be sent by e-mail including a quick link to the order, see figure 20, a notification is suppressed if the check-box is disabled.. Figure 20: Order book with e-mail notification 7. Scripting in ProjectForge® You may edit, store and execute scripts in ProjectForge for generating Excel files out of the database of ProjectForge® as well as charts etc. It&#8217;s also possible to upload Excel master file to scripts for modifiing existing Excel files. A script editor is built-in in ProjectForge®. 7.1. Examples You may use some predefined scripts for getting an idea how powerful the scripting in ProjectForge® is. 7.1.1. Example: Easy Excel-file generation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 // Simple otlin script val users = userDao.getList() val workbook = ExcelUtils.prepareWorkbook(\"Userlist.xlsx\") val sheet = workbook.createOrGetSheet(\"Users\") sheet.registerColumns( \"Username|20\", // Title Username is also property name, length = 20 \"Full name|fullname|30\", // Title differs from property name \"Email|30\", \"Id|10|:integer\", \"Description|50\", ) sheet.createRow().fillHeadRow() users.forEach { user -&gt; val row = sheet.createRow() ExcelUtils.autoFill(row, user) } sheet.setAutoFilter() // optional Excel auto filter workbook 7.1.2. Example: Usage of ProjectForge® filters 1 2 3 4 5 6 val filter = TimesheetFilter() filter.startTime = PFDateTime.withDate(2022, Month.JANUARY, 1).utilDate filter.stopTime = PFDateTime.withDate(2022, Month.JUNE, 30).utilDate val list = timesheetDao.getList(filter) \"Number of found time sheets: ${list?.size}\" PFDateTime and PFDay uses automatically the time zone of the current logged-in user as default. 7.2. Access rights (DAOs) You may access all database entries by using the DAOs (DataAccessObjects) of ProjectForge®. The DAOs ensures that only such entities are returned for those the user has access to. All entities without the user&#8217;s access are removed by the DAOs of the result lists. 7.3. Creation of diagrams and charts You may create charts using (www.jfree.org). Figure 21: Example of a script producing a chart 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import org.jfree.chart.* import org.jfree.chart.plot.* import org.jfree.data.general.* import org.jfree.util.* import org.projectforge.excel.* DefaultPieDataset dataset = new DefaultPieDataset() dataset.setValue(\"Linux\", 15) dataset.setValue(\"Mac\", 8) dataset.setValue(\"Windows\", 70) dataset.setValue(\"Others\", 7) JFreeChart chart = ChartFactory.createPieChart3D(\"Users on www.heise.de\", dataset, true, true, false) PiePlot3D plot = (PiePlot3D) chart.getPlot() ExportJFreeChart export = new ExportJFreeChart(chart, 800, 600) return export 7.4. Creation of zip archives containing multiple files You may create zip files containing multiple files (Excel sheets and diagrams). 1 2 3 4 5 6 7 import ... ExportZipArchive zip = new ExportZipArchive(\"my-first-archive\") // File name will be: my-first-archive.zip ExportWorkbook workbook = new ExportWorkbook(...) zip.add(\"sheet.xls\", workbook) ExportJFreeChart chart = new ExportJFreeChart(...) zip.add(\"chart.jpg\", chart) return zip 7.5. Nested and indexed properties You may use bean properties using the common used notation: 1 2 sheet.propertyNames = [\"user.username\", \"description\", \"startTime\", \"stopTime\", + \"kost2.kost2Art.fakturiert\"] as well as indexed properties (such as the property username of the user). Nested and indexed properties are supported as well: users[3].name or result.userList[0]. 7.6. Import of Excel files Figure 22 shows an example file. Figure 22: Example file for an Excel import 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import java.text.*; import org.projectforge.excel.* NumberFormat nf = NumberFormat.getCurrencyInstance(Locale.UK); xls = reportScriptingStorage.getFile(\"import-example.xls\") // Was uploaded with this name. ExportWorkbook workbook = new ExportWorkbook(xls);// Use script.file instead of xls in script list. ExportSheet sheet = workbook.getSheet(\"Sheet-1\"); // Gets sheet with the given title. rows = sheet.rows; // Get all rows. result = \"\"; total = 0.0; for (int i = 1; i &lt; sheet.rows.size; i++) { row = sheet.getRow(i); no = row.getCell(0).getNumericCellValue(); name = row.getCell(1).getStringCellValue(); amount = row.getCell(2).getNumericCellValue(); total += amount; result += (int)no + \". The amount of \" + name + \" is: \" + nf.format(amount) + \"\\n\"; } result += \"The total amount is: \" + nf.format(total); return result; The output is: 1 2 3 4 5 The amount of Susan is: £50.23 The amount of Hugo is: £17.00 The amount of Lisa is: £15.00 The amount of Mona is: £10.00 The total amount is: £92.23 8. Financial administration with ProjectForge® 8.1. Invoices ProjectForge® supports the management of invoices (inbound and outbound, creditors and debitors): Inovices may contain an unlimited number of positions. If the cost-module is configured you may assign the amount to one or an unlimited number of cost units (as amount or as percent). 8.1.1. Assignment of cost units It&#8217;s recommended to try this feature for a better understanding. You may assign positions of invoices to cost1 and cost2 units. An autocomplete functionality helps you to distribute the amounts to cost units very fast. You may enter numbers of cost units as well as text (e. g. text fields of a cost unit such as description. customer, type etc.). An unlimitited number of assignments are supported. After adding new assignments ProjectForge® prefills the amount of the invoice which wasn&#8217;t assigned yet. The amount may be given as amount or as percent value. For better tracebility you may not delete positions (after stored in the database). If an entry should be removed, enter '0' as amount. 8.1.2. Clone functionality for invoices (inbound and outbound) You may clone existing invoices for a faster process of inserting new invoices: The date will be replaced by 'today'. The positions as well as any existing assignment to cost units will be copied. 8.2. Liquidity planning / forecast Based on invoices and additional liquidity entries (others than invoices) ProjectForge® gives you the opportunity to manage your cash flow very easy including a forecast of your cash flow. 8.2.1. Calculation of expected dates of payments ProjectForge® uses due dates for forecasting the cash flow and account balance. For invoices ProjectForge® calculates the expected dates of payment based on already paid invoices in the last 12 month of the same: Project: Do paid invoices already exist for the same project? Customer number: Do paid invoices already exist for the customer (given by the cost number)? Customer text: Do paid invoices already exist for the customer (full text)? Customer short text: Do paid invoices already exist for the customer (the beginning of the customer text will be used)? If any paid invoice was found (starting with project) a mean time of payment of the paid invoices is used for calculating the expected date of payment. Figure 23: Liquidity with forecast of the cash flow Please refer the AdministrationGuide for enabling the liquidity plugin of ProjectForge®. 8.3. Datev-Import (German) Über diese Funktion werden die Konten (Kontenplan) und die Buchungssätze eingelesen. Diese Daten werden vom Steuerbüro in Form eines Excel-Exports geliefert. 8.3.1. Grundsätzliches zum ProjectForge®-Excel-Import ProjectForge® liest Tabellenblätter mit bestimmten Namen bzw. Namensmustern ein. Tabellenblätter, deren Namen ProjectForge® im Import nicht unterstützt, werden ignoriert. ProjectForge® erkennt die Werte in den Spalten anhand des Namens der Kopfspalte Die Reihenfolge der Spalten ist variabel. Es können zusätzliche Spalten enthalten sein. Diese Spalten werden ignoriert. Die Importdaten werden im Import-Storage innerhalb der Benutzersitzung gespeichert. Der Anwender kann beliebige Schritte innerhalb seiner Benutzersitzung durchführen, ohne dass die Importdaten verloren gehen. Auch die Reihenfolge beim Import von mehreren Tabellenblättern (Verproben, Prüfen, Selektieren, Speichern etc.) ist beliebig. ProjectForge® stellt sicher, dass nur fehlerfreie und verprobte Datensätze importiert werden können. Die Übernahme von Daten kann auch schrittweise erfolgen (s. Beispiel unten: Schritt 3 bis 5 können beliebig oft wiederholt werden, solange noch nicht alle Daten auch in ProjectForge® nicht übernommen wurden.) Im folgenden wird anhand des Kontenplans der Import und die notwendigen Prüfschritte erläutert. Schritt 1: Auswahl der zu importierenden Excel-Datei Figure 24 zeigt den ersten Schritt: Es wird die zu importierende Excel-Datei über den Browserknopf \"Datei auswählen\" im lokalen Dateisystem selektiert. Anschließend wird die gewünschte Importfunktion (z. B. \"Import Kontenplan\") gewählt. Figure 24: Datev-Import, Schritt 1: Auswahl der Importdatei Schritt 2: Daten werden eingelesen Figure 25 zeigt den zweiten Schritt: Die Daten wurden erfolgreich eingelesen und die importierten Tabellenblätter (Sheets) untereinander angezeigt (standardmäßig sind alle Blätter zugeklappt). Im Fehlerfalle wird der Fehler mit Tabellenblatt, Zeilennummer und Spaltennummer angezeigt (z. B. wenn ein nicht passendes Zahlenformat in einer Zelle erkannt wurde.) Fehlerhafte Datensätze können bereits eingesehen werden (durch Aufklappen des Importbereichs). Figure 25: Datev-Import, Schritt 2: Einlesen der Datei Schritt 3: Verproben Figure 26 zeigt den zweiten Schritt: Die Daten wurden erfolgreich eingelesen und die importierten Tabellenblätter (Sheets) untereinander angezeigt (standardmäßig sind alle Blätter zugeklappt). Nun sollte die Funktion \"Verproben\" für das gewünschte Tabellenblatt / die gewünschten Tabellenblätter gewählt werden. Beim Verproben gleicht ProjectForge® die importierten Datensätze mit evtl. bereits vorhandenen Datensätzen ab. Nach dem Verproben werden auch neue und modifizierte Datensätze angezeigt. Figure 26: Datev-Import, Schritt 3: Verproben Schritt 3: VerprobenPrüfen, selektieren und Übernahme Figure 27 zeigt den vierten Schritt: Nach der Verprobung können nun die zu speichernden Datensätze einer Sichtprüfung unterzogen werden. Bei modifizierten Einträgen wird über einen Tool tip der ursprüngliche Wert angezeigt. Nach der Prüfung können die Datensätze selektiert werden, die in ProjectForge® übernommen werden sollen. Mit der Funktion \"Select all\" können auch alle angezeigten Datensätze markiert werden. Anschließend kann über \"Commit\" eine Übernahme bestätigt und angestoßen werden. Figure 27:__ Datev-Import, Schritt 4: Prüfen, Selektion und Übernahme Schritt 5: Import abgeschlossen Figure 28 zeigt den fünften Schritt: Nach dem Import wird angezeigt, wieviel Datensätze übernommen wurden. Ein abschließendes \"Verproben\" sollte aufgerufen werden. Wenn alle Änderungen erfolgreich übernommen wurden und alle Datensätze selektiert worden waren, so müsste abschließend für das Tabellenblatt \"nichts zu tun\" angezeigt werden. Wurde nur ein Teilsatz der Daten selektiert, so werden die übrigen noch zur Auswahl angeboten. Figure 28: Datev-Import, Schritt 5: Abschluss 8.3.2. Import der Buchungskonten (Kontenplan) Für den Import der Buchungskonten wird im zu importierenden Exceldokument ein Tabellenreiter mit dem Namen \"Kontenplan\" erwartet. Dieses Tabellenblatt wird für den Import verwendet. Alle anderen Tabellenblätter werden ignoriert. Format Folgendes Format wird erwartet (see figure 29). Figure 29: Excelformat für Datev-Import des Kontenplans In Zeile 2 wird die Kopfspalte mit den Namen \"Konto\" und \"Bezeichnung\" erwartet. Vorhandene Konten werden nicht gelöscht, sondern bei Vorhandensein modifiziert. 8.3.3. Import der Buchungssätze (01-12) Für den Import der Buchungssätze werden im zu importierenden Exceldokument die Tabellenblätter mit dem Namen \"01\", \"02\", &#8230;&#8203;, \"12\" berücksichtigt. Diese Blätter stehen für die zu importierenden Buchungsmonate. Beim Import werden die Buchungssätze unabhängig vom Datum dem Buchungsmonat zugeordnet. Datumsangaben von Buchungssätzen dürfen nicht in der Zukunft bezüglich des Buchungsmonats liegen. Das Kalenderjahr zum Buchungsmonat erkennt ProjectForge® automatisch anhand des Datums der Buchungssätze. Die Spalte \"Kostenstelle/-träger\" wird als \"Kost2\" interpretiert. Alternativ kann diese Spalte auch in \"Kost2\" umbenannt werden. Die Spalte \"Alt.-Kst.\" wird \"Kost1\" interpretiert. Alternativ kann diese Spalte auch in \"Kost1\" umbenannt werden. Die Spalten \"SH\" tauchen Datev-bedingt doppelt auf. Die Reihenfolge darf nicht vertauscht werden, da die erste Spalte \"SH\" für die Übernahme \"Soll/Haben\" verwendet wird. Die Spalte Bemerkung ist optional. Hier können Zusatzinformationen, Hinweise oder Marker zu einzelnen Zeilen angegeben werden. Format Folgendes Format wird erwartet (see figure 30). Figure 30: Excelformat für Datev-Import der Buchungssätze In Zeile 2 wird die Kopfspalte mit den Namen \"Konto\" und \"Bezeichnung\" erwartet. Vorhandene Konten werden nicht gelöscht, sondern bei Vorhandensein modifiziert. 8.4. Other imports 8.4.1. Salaries of employees The following Excel format is assumed: A monthly sheet has the title of format 'yyyy-mm', e. g. \"2009-05\". The columns are: Cost1 unit of the employee, e. g. '3.050.00.00' Employee: Last name, surname Gross salary including taxes and insurance, e. g. '1,846.77' bonus, royalty, overtime premium etc. as decimal value Special payment as decimal value Car as decimal value Total will be ignored Comment as text field The following script generates the database SQL-Statement for importing the salaries: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 import org.projectforge.core.* import org.projectforge.excel.* import java.text.* year = 2009; month = 4; if (month &lt; 10) monthString = \"0\" + month else monthString = \"\" + month NumberFormat nf = NumberFormat.getNumberInstance(Locale.GERMANY); nf.setMaximumFractionDigits(2); nf.setMinimumFractionDigits(2); xls = reportScriptingStorage.getFile(\"2009-Gehaltslisten.xls\") // Was uploaded with this name. ExportWorkbook workbook = new ExportWorkbook(xls); // Uses the uploaded Excel file. ExportSheet sheet = workbook.getSheet(year + \"-\" + monthString); // Gets the sheet. rows = sheet.rows; // get all rows String result = \"\"; for (int i = 4; i &lt; sheet.rows.size; i++) { row = sheet.getRow(i); cost1String = row.getCell(0).getStringCellValue(); employeeName = row.getCell(1).getStringCellValue(); gross = row.getCell(2).getNumericCellValue(); bonus = row.getCell(3).getNumericCellValue(); special = row.getCell(4).getNumericCellValue(); car = row.getCell(5).getNumericCellValue(); comment = row.getCell(7).getStringCellValue(); total = new BigDecimal(gross + bonus + special + car).setScale(2, java.math.RoundingMode.HALF_UP); if (employeeName != null) employee = employeeDao.getByName(employeeName); if (kost1String == null) break; kost1 = kost1Dao.getKost1(kost1String); if (kost1 == null) { result += \"\\n-- **********\" + kost1String; } else if (kost1.getDescription().equals(employeeName) == false) { result += \"\\n-- **********\" + kost1.getDescription() + \" != \" + employeeName; } else if (employee == null) { result += \"\\n-- ********** Employee '\" + employeeName + \"' not found.\"; } else { text = \"Excel-Import Kai\"; if (tantieme_zv &gt; 0) text += \"; bonus/royalty/overtime: \" + nf.format(bonus); if (special &gt; 0) text += \"; Special: \" + nf.format(special); if (car &gt; 0) text += \"; car: \" + nf.format(car); if (comment != null &amp;&amp; comment.trim().size() &gt; 0) text += \"; \" + comment; result += \"\\ninsert into t_fibu_employee_salary (pk,created,last_update,deleted,gross,month,type,year,comment,employee_id) values (nextval('hibernate_sequence'),now(), now(),false,\" + total + \", \" + (month - 1)+ \", 'SALARY', \" + year + \",'\" + text + \"',\" + employee.id + \");\"; } } return result; 8.5. Time sheets 8.5.1. Protection You may protect time sheets by date for structure elements (including all descendent structure elements). This protection ensures that no employee is able to modify time sheets with dates before the date where the protection ends. This is useful if the time sheets are invoiced or taken over by other accounting systems. Figure 31 shows a structure element with a protection of time sheets until 30/06/2013. Time sheets with dates before the date of protection may only be changed by members of the financial administration staff (regarding times and cost assignements). Figure 31: Time sheet protection for structure elements (incl. structure sub elements) 8.5.2. Cost units You may assign projects and/or cost2 units to a structure element. If a project is assigned, all existing cost2 units of this projects are automatically assigned to this structure element. If there is now project or cost unit assigned to a structure element, all settings of the parent structure element are used. If no such setting found for the parent element the grand parent element is used and so on. Only such cost units are used which have no status value or the status value 'ACTIVE'. If there is any cost2 unit associated with a structure element (directly or derived), an user has to select a suitable cost unit while booking time sheets. Figure 32 shows a structure element with the assigned project '5.200.00 - ProjectForge®' and the cost unit '5.200.00.*'. Figure 32: Assigning cost2 units to structure elements. Hint If you are missing cost units you may add them via project edit page (with status 'ACTIVE'). If you want to disable cost units you may change the status of such units to 'INACTIVE' or 'ENDED' or you may remove them by using the black- or white list (see fig. ref label=\"fig:aufgabeKost2\" type=\"full\" /&gt;). 8.5.3. Booking of time sheets For time sheets assigned to structure elements with assigned cost units a selection of a cost unit is required as shown in figure 33. Figure 33: Booking of time sheets to structure elements with given cost units 8.5.4. Monthly employee reports A monthly employee report for users with all time sheets ordered by cost units, structure element, user and weeks are also available as PDF for download. These reports may me used for e. g. signing monthly reports of employees by their managers. 8.5.5. JIRA support JIRA issues are supported if configured. If JIRA issues are contained in e. g. time sheets or description of structure elements then the will be displayed with links to the configured JIRA system. 8.6. Cost unit accounting 8.6.1. Fraction of working time You may configure a fraction for single cost units or cost unit types (default is 1). Example: if the travelling time should be counted only as half regarding the employees working time, you may configure the fraction as 0,5. 8.7. Reporting via Report objectives (in progress) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 &lt;ReportObjective title=\"Customer ACME\" id=\"ACME\" suppressOther=\"true\" suppressDuplicates=\"true\"&gt; &lt;kost1-include&gt;3.*&lt;/kost1-include&gt; &lt;kost1-exclude&gt;*.01&lt;/kost1-exclude&gt; &lt;kost1-exclude&gt;*.12&lt;/kost1-exclude&gt; &lt;kost2-include&gt;5.*&lt;/kost2-include&gt; &lt;kost2-exclude&gt;*.02&lt;/kost2-exclude&gt; &lt;kost2-exclude&gt;*.11&lt;/kost2-exclude&gt; &lt;ReportObjective title=\"Project ACME-WEB-Portal\" id=\"ACME-WEB-Portal\"&gt; &lt;kost2-include&gt;5.020.01.*&lt;/kost2-include&gt; &lt;/ReportObjective&gt; &lt;ReportObjective title=\"Project ACME-Java-Migration\" id=\"ACME-Java-Migration\"&gt; &lt;kost2-include&gt;5.020.02.*&lt;/kost2-include&gt; &lt;/ReportObjective&gt; &lt;/ReportObjective&gt; If an include list is empty, all records will match for this include list (wildcard). If an include list isn&#8217;t empty, at least one entry must match. For multiple include lists a record must match all include lists (logical 'and'). If a record matches at least one entry of any exclude list, this record will be excluded. The method String.matches(regExp) is used for evaluating the regular expressions. You may refer the expression syntax of the Java class java.util.regex.Pattern for a better understanding. For your convenience ProjectForge® modifies automatically the configured expressions before usage: All points ('.') will be escaped and the wildcard character '' is replaced by '.'. You may suppress the automatical modification by prepending an apostrophe, e. g. \"'^5\\.510.*\" will not be modified (only the apostrophe itself is removed before evaluation). Examples: \"3.*\" &#8594; \"3\\..*\" (matches all strings beginning with \"3.\". \"*.02\" &#8594; \".*.02\" (matches all strings ending with \".02\". \"'^5.02.*\" &#8594; \"^5.02.*\" (matches all strings starting with \"5?02\". (This strategy of replacement is for convenience purposes because '.' means normally any character and '' means a multiple occurrence of the character before the asterisk: for example \"3.1\" will match \"3x1111\" but not \"3.120.08.02\".) Hint A child ReportObjective may only consist of entries of the parent ReportObjective (only a subset)! You may access the ReportObjectives directly. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 import org.fibu.* import org.fibu.kost.* import org.projectforge.excel.* import org.projectforge.core.* class JoinedObject { BuchungssatzDO satz EmployeeDO employee } // Loading the list with all accounting records: def records = reportStorage.getCurrentReport().getBuchungssaetze() records = records.findAll{ satz -&gt; (5000..5999).contains(satz.konto.nummer) } // Loading the list of employees: def employees = employeeDao.getList().findAll{it.kost1 != null} def result = new ArrayList() records.each{bs -&gt; el = new JoinedObject() el.satz = bs el.employee = employees.find{employee -&gt; employee.kost1Id == bs.kost1.id} result.add(el) } // Generation of an Excel workbook: ExportWorkbook workbook = new ExportWorkbook(); ExportSheet sheet = workbook.addSheet(\"Ergebnis\") sheet.contentProvider.colWidths = [10, 10, 8, 8, 10, 10, 20, 20] sheet.addRow().setValues(\"Date\", \"Amount\", \"Account\", \"Contra account\", \"Cost 1\", \"Cost 2\", \"Name\") sheet.contentProvider.putFormat(\"satz.datum\", \"DD.MM.YYYY\") sheet.contentProvider.putFormat(\"satz.betrag\", \"#,##0.00$;[Red]-#,##0.00$\") // English format sheet.contentProvider.putFormat(\"satz.konto.nummer\", \"0\") sheet.contentProvider.putFormat(\"satz.gegenKonto.nummer\", \"0\") sheet.propertyNames = [\"satz.datum\", \"satz.betrag\", \"satz.konto.nummer\", \"satz.gegenKonto.nummer\", \"satz.kost1.formattedNumber\", \"satz.kost2.formattedNumber\", \"employee.user.fullname\"] sheet.addRows(result) return workbook 9. Data protection 9.1. Passwords Passwords will be stored SHA-encrypted in the database. Directly after usage of passwords (such as in the login screen) all password variables will be deleted. Passwords are not part of any log file entry. 9.2. History of changes All modifications of entities (create, update, delete) are stored with time stamp, user who cause the modification and the modified fields with the old and new value. The history of changes is displayed at the edit page of an entity. There are single special fields which are not part of this history mechanism. 9.3. Logging Access violations and actions of users (such as modification of entities) as well as any error message are stored in log files. The log file is important for analyzing error etc. 9.4. Phone call - numbers Every phone call will be logged. A log file entry contains: User causes the phone call Source phone number Destination phone number without the last 3 digits, eg 012345xxx. 10. Glossary The developers of ProjectForge® were using the German language until several years ago for some financial terms. Nowadays English is the main language of the development (for Java classes, documentation etc.). Here you may find translation and description of common used terms. German English Description Aufgabe task Since mid of 2013 the term task was replaced by 'structure elements' because such elements may represent not only tasks, they represent customers, projects, releases, tasks etc. Auftrag order Beleg receipt Betrag amount Brutto gross (amount) Buchungssatz accounting records Accounting records are entities which are imported by external financial systems (e. g. DATEV in Germany). The recommended workflow is to organize invoices, salaries of the employees etc. with ProjectForge® and then to import the data in the external financial system. The re-imported accounting records should match the data in ProjectForge. ProjectForge® and the scripts also work if you don&#8217;t have accounting records, you may use the origin entities such as invoices etc. directly in your scripts. The plural of accounting record is: Buchungssaetze BWA business assessment Term used inside the financial module of ProjectForge®. DATEV Software common used in Germany for financial administration. ProjectForge® offers import and export interfaces. Datum date Eingangsrechnung invoice Used for incoming invoices (creditors). fakturiert invoiced Fibu financial administration Fibu is the abbreviation of the German term 'Finanzbuchhaltung'. Gegenkonto contra account Term used inside the financial module of ProjectForge®. Kontenplan account structure Term used inside the financial module of ProjectForge®. Konto account Term used inside the financial module of ProjectForge®. Kost cost Term used inside the financial module of ProjectForge®. Kost1/Kost2 &#8594; cost1/cost2 is the short form of 'cost unit'. Kostenträger cost unit Term used inside the financial module of ProjectForge®. Kostenträgerart type of cost unit Term used inside the financial module of ProjectForge®. Examples for types of cost units are: 'Travelling', 'Acquisition', 'Meetings' etc. Types are customizable and used for specifying different types of costs in projects and/or company wide. Kostenzuweisung cost assignment Term used inside the financial module of ProjectForge®. Costs, such as employee salaries, position of invoices (incoming and outgoing) etc. are assigned to cost units. Kunde customer Menge amount Netto net (amount) Projekt project Rechnung invoice Used for outgoing invoices (debitors).",
    "tags": "userguide",
    "url": "/docs/userguide/"
  },{
    "title": "How much does it cost to use ProjectForge?",
    "text": "ProjectForge as OpenSource software without any limitations is for free. The community edition of ProjectForge is for free and its functioning has got no limitations. The software is being developed further by a professional system house.",
    "tags": "faq-main",
    "url": "/misc/faqs.html"
  },{
    "title": "Do you provide free support for ProjectForge?",
    "text": "Yes, support is free. Get help, post your questions, wishes and experiences in the Sourceforge ProjectForge forum. Professional support A professional system house is available to assist with installations offering a full service including hosting an instance of ProjectForge as well as a technical support via e-mail and phone. Do you require a fast level of support? Is constant availability of importance to you? Request our professional services which can be tailored to the individual needs of your business.",
    "tags": "faq-main",
    "url": "/misc/faqs.html"
  },{
    "title": "Do you provide Issue Management?",
    "text": "Please refer the GitHub system. You need a GitHub Account to create issues.",
    "tags": "faq-main",
    "url": "/misc/faqs.html"
  },{
    "title": "Start-up of ProjectForge fails due to Lucene errors.partly (e. g. half)?",
    "text": "Probably ProjectForge and therefore the indexer wasn’t terminated correctly. Please feel free to remove the directories and/or files of Lucene and rebuild index via the administrator’s web page. The files are located in the ProjectForge’s application dir in the hibernate-search dir.",
    "tags": "administration faq",
    "url": "/misc/faqs.html"
  },{
    "title": "Projects, customers and some other functionalities aren’t visible?",
    "text": "If you really need cost-unit accounting please activate this functionality via configuration web page (it’s a config parameter. Please, don’t forget to re-login, if the menu isn’t up-to-date.) Projects and customers are only needed for cost-unit accounting. If you don’t need it, please refer the structure tree for configuring your projects: Customer -&gt; Project -&gt; Release -&gt; …",
    "tags": "administration faq",
    "url": "/misc/faqs.html"
  },{
    "title": "Image pdf-logo.png not found while generating pdf files.",
    "text": "Please add your logo at the given path as pdf-logo.png. Please refer the AdministrationGuide.",
    "tags": "administration faq",
    "url": "/misc/faqs.html"
  },{
    "title": "Hypersonic - Could not insert entries to the data base.",
    "text": "If the user can’t add new entries (contracts, Gantt charts, MEB entries etc.) to the data-base Hypersonic, please have a look in your ProjectForgeDB.script file. All create-table-statements should have the following entry for the primary key (pk): CREATE MEMORY TABLE T_...(PK INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY, ... If the script doesn’t contain GENERATED BY DEFAULT ..., please stop your ProjectForge system and edit the script file and restart ProjectForge.",
    "tags": "administration faq",
    "url": "/misc/faqs.html"
  },{
    "title": "Reset passwords",
    "text": "As an administration user you can reset the user’s passwords. If you’ve lost the administrator’s password you can reset the password by updating the database entry like update t_pf_user SET password='SHA{2F1E969683DE272AC96D5AA6033E93A8CB2F283F}', password_salt=null where username='admin'; This encrypted passwords represents ‘manage’. See the log file for encrypted passwords after login failures, if you want to set another password via sql. For HypersonicSQL shutdown the server and edit the ProjectForgeDB.script file like this: INSERT INTO T_PF_USER VALUES(1, ..., 'SHA{2F1E969683DE272AC96D5AA6033E93A8CB2F283F}',...,null,...,'admin').",
    "tags": "administration faq",
    "url": "/misc/faqs.html"
  },{
    "title": "Cost-unit accounting - Some working hours are only summarized partly (e. g. half)?",
    "text": "If you book your time sheets on costs for which the working hours are configured to calculate only partly then the sum will be less than expected. Please ask your accounting staff.",
    "tags": "financial faq",
    "url": "/misc/faqs.html"
  },{
    "title": "Datev import - An internal error occurs while importing plenty of accounting entries.",
    "text": "Please try to import 100 or 500 data sets first (select 100/500). If successful, continue with the next 100/500.",
    "tags": "financial faq",
    "url": "/misc/faqs.html"
  },{
    "title": "My time sheets are not displayed in the calendar view?",
    "text": "At the top of the dialog on the right side you can click on the clock symbol or user selection symbol for showing the time sheets. You can click on the symbol for birthdays to show/hide birthdays.",
    "tags": "general faq",
    "url": "/misc/faqs.html"
  },{
    "title": "Calendar view have different time of days than called time sheet edit page.",
    "text": "Please ensure that your browser/client has the same time zone as your account has (refer my account).",
    "tags": "general faq",
    "url": "/misc/faqs.html"
  },{
    "title": "Calendar view changes time period on reload?",
    "text": "This happens if you have set different time zones: Please note, that your time zone under ‘my account’ or config.xml in ProjectForge and the time zone of your client system should match.",
    "tags": "general faq",
    "url": "/misc/faqs.html"
  },{
    "title": "Wrong dates for timepending attributes for timezones less than UTC+0",
    "text": "If you have set a timezone which is less than UTC+0 (e. g. UTC-4), and you create a new entry in a timepending panel, than after saving the date is two days earlier than you set it. For example: you select the 03.02.2016, than in the database the 02.02.2016 will be saved and in the UI the 01.02.2016 will be shown.",
    "tags": "general faq",
    "url": "/misc/faqs.html"
  },{
    "title": "Requirement for the vacationfeature",
    "text": "That an employee is able to use the vacationfeature, he must be assigned to a user and his vacationdays must be set in employee-edit-page.",
    "tags": "general faq",
    "url": "/misc/faqs.html"
  },{
    "title": "Problems with the orderbook for users in the Pf_ProjectManager group",
    "text": "Under certain circumstances, a user of the PF_ProjectManager group can not see the order book, although this should always be the case by a user in the PF_ProjectManager group. Workaround: Add users to the PF_ProjectAssistant group and remove them from the PF_ProjectManager group and save it. Then select the empty value from the jobbook drop-down menu and save it. Now add the user to the group PF_ProjectManager and remove them from the PF_ProjectAssistant group and save it.",
    "tags": "general faq",
    "url": "/misc/faqs.html"
  },{
    "title": "XML-backup and restore and data-base migration BUG",
    "text": "With the import and export of the database as XML are some bugs, but we will continue to work on the problem.",
    "tags": "general faq",
    "url": "/misc/faqs.html"
  },{
    "title": "How can I remove favorite entries?",
    "text": "Under “My settings” you will find all favorite entries for editing and deleting.",
    "tags": "general faq",
    "url": "/misc/faqs.html"
  },{
    "title": "How can I create a structure element in the drop down box of a structure element field?",
    "text": "It’s not possible. Here you can only add existing structure elements as favorites for often usage. You can create new structure elements in the structure tree menu. Click e. g. on the parent structure element and choose “create structure sub element” or click “add structure element” and select the parent structure element in the edit dialogue.",
    "tags": "general faq",
    "url": "/misc/faqs.html"
  },{
    "title": "Navigation or browsing the structure tree doesn’t work smoothly.",
    "text": "Please remove all the cookies for the ProjectForge page and re-login. If this occurs most times the stay-logged-in method is used for every request. This occurs mostly for developers who are working with different installations of ProjectForge on one server.",
    "tags": "general faq",
    "url": "/misc/faqs.html"
  },{
    "title": "Which browsers are supported?",
    "text": "ProjectForge is developed and tested with Apple Safari, Firefox and Chrome. These browsers should work fine in their current version. The Microsoft Internet Explorer doesn’t work with all versions of ProjectForge because it’s very time-consuming to develop a version that work well with the IE. The IE is so much different to all other browsers… The use of Firefox or Google Chrome is recommended.",
    "tags": "technical faq",
    "url": "/misc/faqs.html"
  },{
    "title": "Is there any support for other data bases?",
    "text": "Data bases such as MySQL, Oracle, MS-SQL-Server etc. should work with minor extensions of the class DatabaseSupport.java. Some body should test this.",
    "tags": "technical faq",
    "url": "/misc/faqs.html"
  },{
    "title": "Error messages in the log files of ProjectForge on start-up?",
    "text": "You can ignore the messages “Unable to proxy method…” in the log files on start-up, they’re correct.",
    "tags": "technical faq",
    "url": "/misc/faqs.html"
  },{
    "title": "ProjectForge 6.22.0 released",
    "text": "The ProjectForge Version 6.22.0 with new Spring Boot version and some bugfixes is released. The ProjectForge Launcher is not working anymore. Only the projectforge-application.jar command-line starter is available. Added BIC for german IBANs optional Improved Update Spring Boot version to 2.0 Fixed Fix round-off error in invoice Fix session fixation Fix access management bug Fix team event invitation mail send Fix call function from address list page Fix employee status in employee list export You can download the latest binaries from GitHub, Sourceforge, or Docker Hub.",
    "tags": "",
    "url": "/changelogs/changelog-20180717--6-22/"
  },{
    "title": "🚀 ProjectForge 7.0 released",
    "text": "Major Release: This version contains a lot of cool stuff: new front-end, data transfer tool, docker support, Added New front-end Data transfer tool for sharing files with other user’s and external customers New plugin: skill matrix for sharing knowledge. Tons of new functionalities and improvements. Technology Available as Docker images for fastest installation ever. Setup wizard for easy setup. New front-end works with React. Over 20% of the code is now developed with Kotlin. Full Rest support for most functionality for other clients (such as a smartphone app). You can download the latest binaries from GitHub, Sourceforge, or Docker Hub.",
    "tags": "",
    "url": "/changelogs/changelog-20210407--7-0/"
  },{
    "title": "ProjectForge 7.1 released",
    "text": "Improvements, support of Java 1.13+. Added checksums for all files in data transfer as well as nightly run of sanity job. Improved CardDAV support improved (cell phone numbers) Test data in test systems: no more unique constraint violations anymore on new test systems. Technology Support of Java 13+. Major updates of nearly all libraries. Multi tenancy removed. You can download the latest binaries from GitHub, Sourceforge, or Docker Hub.",
    "tags": "",
    "url": "/changelogs/changelog-20210412--7-1/"
  },{
    "title": "ProjectForge 7.1.1 released",
    "text": "DataTransfer supports now personal boxes for one to one exchange of files. Docker improved. Minor fixes and improvements. Added Data transfer: Personal box of every user for fast exchange of large files one to one. Improved Docker improved. Technology Update of all JavaScript libs (React etc.) You can download the latest binaries from GitHub, Sourceforge, or Docker Hub.",
    "tags": "",
    "url": "/changelogs/changelog-20210504--7-1-1/"
  },{
    "title": "ProjectForge 7.1.2 released",
    "text": "Security issues of pentests, DataTransfer improved. Added The DataTransfer tool is improved: download area in one zip, more options for external users Security A pentest was done by Micromata GmbH. Some security fixes were done Fixed Several minor bugfixes Improved Several minor improvements (order book etc.) Docker You can download the binaries from Docker hub You can download the latest binaries from GitHub, Sourceforge, or Docker Hub.",
    "tags": "",
    "url": "/changelogs/changelog-20210525--7-1-2/"
  },{
    "title": "ProjectForge 7.2 released",
    "text": "Security issues of pentests, DataTransfer improved. Added Word-Templating (Merlin): Word templating for letters, information, contracts etc. with serial execution including variables, if-else-expressions etc. inside docx (like Velocity-Scripting-engine). All users/emloyees may receive letters/contracts etc. (as Word and/or PDF-files) in their personal boxes via serial execution. example template files included for a quick start. Log viewer added (for admins as well as for users for tracking own activity for mass updates of time-sheets, usage of Merlin or Datev-imports) Gender for users added: Used by Merlin (word templating) for creation of personalized letters, contracts etc. Improved DataTransfer-Plugin: encryption added Exporting SEPA-cash transfers improved: special characters unsupported by banking software will be replaced/removed. Privacy Features for deleting data such as addresses, employee, vacataion data etc. implemented due to privacy restrictions in the EU. The deletion includes also history entries. Fixed Several minor bugfixes Search for deleted entries (addresses etc.) fixed. Search in history entries (keywords, users) fixed. Admin No restart after first installation required anymore. During Shutdown some temporarily created directories (tomcat.* and projectforge-application*) will be deleted automatically. Security using char[] instead of String for passwords. You can download the latest binaries from GitHub, Sourceforge, or Docker Hub.",
    "tags": "",
    "url": "/changelogs/changelog-20210525--7-2/"
  },{
    "title": "ProjectForge 7.3 released",
    "text": "Security issues of pentests, DataTransfer improved. Added Combination of DataTransfer and Merlin: Serial PDFs/Words may be automatically generated and sent to the personal boxes of the users/employees. Scripting: example-scripts, include supported, new source editor supporting Groovy and Kotlin. Improved Combination of DataTransfer and Merlin: Serial PDFs/Words may be automatically generated and sent to the personal boxes of the users/employees. Scripting functionalities improved. Privacy Data protections improvements. Fixed Several minor bugfixes Admin Ssh public key is also visible for non-admins. Security 2FA introduced (will be improved soon). You can download the latest binaries from GitHub, Sourceforge, or Docker Hub.",
    "tags": "",
    "url": "/changelogs/changelog-20220309--7-3/"
  },{
    "title": "ProjectForge 7.4 released",
    "text": "2FA (SMS, Authenticator, Fidu2) now fully supported. Multi-upload with progress bars for data-transfer-areas. Added 2FA (use SMS, mail, Authenticator app or Webauthn/Fido2 as 2nd factor for much more security.) Password reset for users implemented (it&#8217;s only usable for users with configured 2FA / mail isn&#8217;t supported for password reset due to security reasons). Scripts may be executed by users/groups without special rights (sudo functionality is supported). You may configure reports e. g. for project managers including financial data. mass update and selection of invoices for e. g. bank transfers etc. Datatransfer: Multiple upload with progress bars implemented. Very nice. Multi selection of files for deletion and download. Audit on areas added (for seeing what happened) E-mail notifications improved: files being deleted and audit log on areas. Improved CSRF-Handling: if session token was changed, the user is able to simply reload the page for continuing. mass update functionality refactored and improved. pagination for result lists of new UI introduced. Fixed Several minor bugfixes Admin Password reset for users: Admins may enter cell numbers of users to enable password for users without any configured 2FA. Security 2FA is now fully supported. You may configure: 2FA after login (expires after x days after if stay-logged-in is used) 2FA expiry time (from 1 minute to 90 days) for special usage (e. g. user administration, password changing, financial stuff etc.) You can download the latest binaries from GitHub, Sourceforge, or Docker Hub.",
    "tags": "",
    "url": "/changelogs/changelog-20220309--7-4/"
  },{
    "title": "ProjectForge 7.5 released",
    "text": "Improved The main calendar refactored (colors, functionalities, more customizable etc.) Datatransfer-Plugin: Notification improved Vacations support now multiple substitutions. Shows now conflicts History of changes improved. 2FA-requests preserve now input fields. lots of minor improvements. Fixed Menu customization in classical version. Yubikey now also supported in other browsers: Chrome, Edge etc. several bugs fixed. Admin - User/group administration in new version. Security - Some issues from last security pen test implemented. Technology - New versions: Java 15, Spring, React/Router, Wicket - Separation of db table user and passwords. You can download the latest binaries from GitHub, Sourceforge, or Docker Hub.",
    "tags": "",
    "url": "/changelogs/changelog-20221021--7-5/"
  },{
    "title": "ProjectForge 8.0 released",
    "text": "Improved Own CardDav-Implementation for synchronization of contacts (tested with Apple contacts (macOS/iOS), Thunderbird). Sipgate interface implemented for synchronization of address. Calendar view improved. Excel-Export of vacations for all employees, teams and colleagues. Birthdaybutler for monthly birthday list. Export of timesheets as xlsx. Attachments to books added. lots of minor improvements. Fixed several bugs fixed. Admin Security Technology - Docker container available for arm64 as well as for amd64 (Linux and macOS X). - Persistence layer completely refactored, MGC removed and replaced by Spring Data JPA. - technical debt reduced. - New major versions: Java 17, Spring 6.1.15, Hibernate 6.6.3, Hibernate search 7.2.1, javax -> jakarta, React/Router, Wicket 10.2, ... You can download the latest binaries from GitHub, Sourceforge, or Docker Hub.",
    "tags": "",
    "url": "/changelogs/changelog-20241223--8-0/"
  },{
    "title": "ProjectForge 8.1 released",
    "text": "Update strongly recommended for all users - This release fixes a major memory leak in the data transfer module and resolves frequent page errors in web pages (Wicket memory issues). Stability proven - This release has been running stable for many weeks without interruption in two heavily used installations. Improved Groups: Description and organization of groups are now visible for non-admins. Group Excel export: Includes email addresses of assigned users. Menu customization: Drag &amp; drop functionality implemented for personalized menu organization. AI time savings tracking in timesheets with calculation and reporting features. Cost search functionality supports plain number string searches. Timesheet collision prevention on multiple button events. Excel export functionality added to accounting record list page. User registration process made more user-friendly for new employees. Modal dialogs on calendar page support ESC key and click-outside closing. 2FA code input field with improved UX (numeric inputmode, autoComplete). Excel export of timesheets with AI-savings data included. Improved forecast and orderbook functionality with planning data. History entries now support user comments for administrative changes. Enhanced AG Grid implementation with German translations, filtering, and sorting. Vacation validator improvements for edge cases with remaining days from previous year. Sipgate contact synchronization service with configurable cron job scheduling. Data transfer functionality with sanity checks and backup capabilities. JCR memory leak fixes and improved repository management. Enhanced user and group access control with menu visibility configuration. Forecast export functionality with filtering by unit, customer, and projects. Task wizard support for optional external groups. Multi-selection improvements for employees in visitor book and vacation entries. Fixed JCR memory leaks in DataTransfer module resolved. DynamicButton disabled state during fetch operations. Accounting record list page tooltips fixed. Timesheet recent entries display corrected (kost2, project, customer info). VacationValidator edge case handling for vacation day calculations. NPE fixes in vacation account management and group services. Task tree access checking improvements for timesheet editing. Order forecast data and invoice cache handling corrections. User group cache and right handling stability improvements. Address forced deletion after MGC migration fixed. History formatting and user comment handling corrected. Various UI fixes for AG Grid tables and component rendering. Excel export XML escaping for task titles in timesheet exports. Cost assignment export improvements for invoice handling. Login redirect functionality after authentication. Calendar and timesheet page rendering issues resolved. Employee selection improvements without autocompletion quirks. Mass update functionality with proper Excel modification tracking. Multiple deadlock issues resolved in caching and logging components. Wicket session store size increased from 100kB to 2MB: prevents session loss on large pages. CSRF token handling and exception registry improvements. File stream handling corrections ensuring proper resource closure. Admin Enhanced administration capabilities with user group cache debugging tools. System sanity checks with automated error reporting via email. Improved cron job scheduling using separate threads to prevent blocking. Database testing tools accessible via admin interface. Configuration parameter management for AI time savings features. Menu item visibility configuration by user groups. Enhanced logging and exception handling for proactive error reporting. Security CVE updates: Tomcat upgraded from 10.1.33 to 10.1.39. Improved access control for addresses and address campaigns (marketing users only). Enhanced user and group visibility restrictions for non-admin users. CSRF protection improvements and token handling enhancements. Technology Wicket upgraded to version 10.5.0 with improved page store handling. Spring framework updates and dependency management improvements. AG Grid integration with advanced filtering, sorting, and column pinning. React Router dependency management and compatibility fixes. Enhanced Kotlin coroutines implementation for asynchronous operations. JCR (Java Content Repository) improvements with RDB storage preparation. Jackson library updates with Hibernate 6 module integration. Excel processing improvements with Apache POI enhancements. Database migration scripts and flyway integration updates. Docker container improvements for multi-architecture support preparation. Package dependency updates including security patches. Gradle build system optimizations and test framework enhancements. Source file headers updated to 2025 copyright year. &lt;p&gt; You can download the latest binaries from &lt;a href=\"https://github.com/micromata/projectforge/releases\"&gt;GitHub&lt;/a&gt;, &lt;a href=\"https://sourceforge.net/projects/pforge/files/ProjectForge/\"&gt;Sourceforge&lt;/a&gt;, or &lt;a href=\"https://hub.docker.com/r/micromata/projectforge\"&gt;Docker Hub&lt;/a&gt;. &lt;/p&gt;",
    "tags": "",
    "url": "/changelogs/changelog-20250901--8-1/"
  }]};