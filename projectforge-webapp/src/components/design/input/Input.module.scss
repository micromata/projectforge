@import '../../../assets/style/mixins';
@import "../../../assets/style/theming";

$transitionTime: .2s ease-out;

.inputContainer {
  position: relative;
  font-size: 1.5rem;
  letter-spacing: .02em;
  color: #333;
  margin: 0;
  cursor: text;
  width: 100%;
  padding: 1.5em 0 0 1rem;
  background-color: #f9f9f9;
  border-bottom: 2px solid #bbb;
  border-radius: 5px 5px 0 0;

  &.withMargin {
    margin-top: 1em;
  }

  &.isActive {
    background-color: #f5f5f5;
    border-color: #333;

    .labelText {
      color: #666;
      transform: translateY(-.5em) scale(0.8);
    }
  }

  &.readOnly, &.readOnly input {
    border-bottom: none;
    cursor: default;
    border-radius: 5px;
  }

  &:hover:not(.readOnly):not(.noStyle) {
    background-color: #eaeaea;
  }

  .labelText {
    width: auto;
    white-space: nowrap;
    font-size: 1.1em;
    transition: transform $transitionTime, color $transitionTime;
    position: absolute;
    top: .8em;
    left: 1rem;
    transform-origin: 0 0;
    transform: translateY(0);
  }

  @mixin color($color) {
    border-color: $color;

    .labelText {
      color: $color;
    }
  }

  &.primary {
    @include color(map_get($theme-colors, primary));
  }

  &.secondary {
    @include color(map_get($theme-colors, secondary));
  }

  &.success {
    @include color(map_get($theme-colors, success));
  }

  &.danger {
    @include color(map_get($theme-colors, danger));
  }

  &.warning {
    @include color(map_get($theme-colors, warning));
  }

  &.info {
    @include color(map_get($theme-colors, info));
  }
}

.additionalLabel {
  margin-left: 1rem;
  position: relative;
  min-height: 1.25em;
  display: block;
  font-size: 0.9em;
  color: #aaa;
  font-style: italic;
}

.inputField {
  &.noLabel {
    label {
      padding: 0;
    }
  }

  label {

    &.noStyle {
      padding: 0;
      background-color: transparent;
      border: none;
      border-radius: 0;

      .icon {
        font-size: 1.25em;
        top: 0;
        bottom: 0;
        left: 0;

        & ~ input, & ~ .labelText {
          margin-left: 2.5rem;
          width: calc(100% - 2.5rem);
        }
      }
    }
    .icon {
      position: absolute;
      font-size: 1.3em;
      bottom: .5em;
      left: .5em;

      & ~ input, & ~ .labelText {
        margin-left: 2.75rem;
      }

      & ~ input {
        width: calc(100% - 2.75rem);
      }
    }

    input {
      background-color: transparent;
      border: none;
      border-radius: 0;
      outline: none;
      width: 100%;
      margin: 0;
      padding: 0;
      box-shadow: none;
      transition: box-shadow .3s;
    }
  }
}

.checkboxGroup {

}

.radioButtonGroup {

}

.formGroup {
  position: relative;
  font-size: 1.5rem;
  letter-spacing: .02em;
  margin-top: 13px;

  &.inline {
    display: inline-block;
    margin-top: 0;
    margin-right: 15px;
    margin-bottom: 0;
    vertical-align: top;
  }

  .checkboxLabel {
    position: relative;
    margin-left: 5px;

    .checkbox {
      position: absolute;
      opacity: 0;
      pointer-events: none;

      & + .text {
        &::before {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          border: 2px solid #333;
          width: 1.2em;
          height: 1.2em;

          @include transition(.3s);
        }

        white-space: nowrap;
        padding-left: 2em;
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        cursor: pointer;

        @mixin color($color) {
          &::before {
            border-color: $color;
          }

          color: $color;

          &:hover {
            $hoverColor: 0;

            @if lightness($color) > 50% {
              $hoverColor: scale_color($color, $lightness: -30%);
            } @else {
              $hoverColor: scale_color($color, $lightness: 20%);
            }

            &::before {
              border-color: $hoverColor;
            }

            color: $hoverColor;
          }
        }

        @include color(map_get($theme-colors, dark));

        &.primary {
          @include color(map_get($theme-colors, primary));
        }

        &.secondary {
          @include color(map_get($theme-colors, secondary));
        }

        &.success {
          @include color(map_get($theme-colors, success));
        }

        &.danger {
          @include color(map_get($theme-colors, danger));
        }

        &.warning {
          @include color(map_get($theme-colors, warning));
        }

        &.info {
          @include color(map_get($theme-colors, info));
        }
      }

      &:checked + .text {
        &::before {
          @include transform(rotate(40deg));
          top: -3px;
          left: 5px;
          border-top-color: transparent;
          border-left-color: transparent;
          width: .6em;
        }
      }
    }
  }

  .radioButtonLabel {
    position: relative;
    margin-left: 5px;

    .radio {
      position: absolute;
      opacity: 0;
      pointer-events: none;

      & + .text {
        &::before {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          border: 2px solid #333;
          border-radius: 50%;
          width: 1.2em;
          height: 1.2em;

          @include transition(.3s);
        }

        padding-left: 2em;
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;

        @mixin color($color) {
          &::before {
            border-color: $color;
          }

          color: $color;
        }

        @include color(map_get($theme-colors, dark));

        &.primary {
          @include color(map_get($theme-colors, primary));
        }

        &.secondary {
          @include color(map_get($theme-colors, secondary));
        }

        &.success {
          @include color(map_get($theme-colors, success));
        }

        &.danger {
          @include color(map_get($theme-colors, danger));
        }

        &.warning {
          @include color(map_get($theme-colors, warning));
        }

        &.info {
          @include color(map_get($theme-colors, info));
        }
      }

      &:checked + .text {
        &::before {
          @include transform(rotate(40deg));
          top: -3px;
          left: 5px;
          border-top-color: transparent;
          border-left-color: transparent;
          border-radius: 0;
          width: .6em;
        }
      }
    }
  }

  .textAreaLabel {
    width: 100%;
    display: block;

    .text {
      position: absolute;
      left: .6em;
      background-color: #fff;
      font-size: .9em;
      padding: 0 .5em;
      letter-spacing: .05em;
      color: #666;

      @include transition(.3s);
    }

    .textArea {
      position: relative;
      margin-top: .55em;
      outline: none;
      border: 1px solid #ddd;
      border-radius: 3px;
      width: 100%;
      line-height: 1em;
      padding: .6em .5em .5em .5em;
      @include transition(border-color $defaultTransitionTime);
    }

    &.active {
      .text {
        color: #a5a2a5;
        font-size: 11px;
      }

      .textArea {
        border-color: #ddd;

        &:focus {
          border-color: #007480;
        }
      }
    }

    @mixin color($color) {
      .text {
        color: $color;
      }

      .textArea {
        border-color: $color;
      }
    }

    @include color(map_get($theme-colors, dark));

    &.primary {
      @include color(map_get($theme-colors, primary));
    }

    &.secondary {
      @include color(map_get($theme-colors, secondary));
    }

    &.success {
      @include color(map_get($theme-colors, success));
    }

    &.danger {
      @include color(map_get($theme-colors, danger));
    }

    &.warning {
      @include color(map_get($theme-colors, warning));
    }

    &.info {
      @include color(map_get($theme-colors, info));
    }
  }

  .additionalLabel {
    display: block;
    margin-bottom: .5em;
    font-size: .85em;

    span {
      margin-left: 15px;
    }
  }
}

.dayPickerLabel {
}

.userSelect {
  width: 30em;
}

.favoritesName svg {
  margin: 0 5px;
  color: #009BA3;
}

.favoritesList {
  list-style: none;
  margin: 10px 0;
  padding: 0;
  font-size: 1.3rem;

  > li {
    padding: 10px;
  }

  svg {
    margin: 0 5px;
    color: #009BA3;

    &.saveIcon {
      position: absolute;
      right: 10px;
      top: 0;
    }

    &:hover {
      color: #00737b;
    }
  }

  .addFavorite {
    padding: 0;
    position: relative;
  }

  .favorite {
    position: relative;
    cursor: pointer;

    .favoriteName {
      margin-right: 75px;
    }

    .hidden {
      visibility: hidden;
      position: absolute;
      top: 0;
      left: 0;
      width: 1px;
      height: 1px;
      overflow: hidden;
      opacity: 0;
    }

    &.selected {
      color: #009BA3;
    }

    &:hover {
      background-color: #eee;

      .actions svg {
        visibility: visible;
      }
    }

    .actions {
      display: inline-block;
      float: right;

      svg {
        visibility: hidden;

        &.deleteIcon {
          color: #666;
        }

        &.syncIcon {
          visibility: visible;
        }
      }
    }
  }
}

.readOnly {
  .coverUp {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    background: linear-gradient(to right, rgba(245,245,245,0), #f5f5f5 50%);
  }

  .value {
    margin: 0;

    span {
      white-space: pre-wrap;
    }
  }

  .icons {
    position: absolute;
    right: .5em;
    bottom: .5em;
    color: #777;

    svg {
      margin-right: .5em;

      &:hover {
        color: #000;
      }
    }

    .success, .success:hover {
      color: map_get($theme-colors, success);
    }

    .error, .error:hover {
      color: map_get($theme-colors, danger);
    }
  }
}
